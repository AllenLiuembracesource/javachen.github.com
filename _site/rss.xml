<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
	<channel>
		<title>JavaChen Blog</title>
		<description>关注开源、Java、Pentaho、Hadoop、Cassandra以及数据可视化</description>
		<link>http://blog.javachen.com</link>
		<lastBuildDate>Tue, 14 Jan 2014 22:41:06 +0800</lastBuildDate>
		<pubDate>Tue, 14 Jan 2014 22:41:06 +0800</pubDate>
		<ttl>1800</ttl>


		<item>
			<title><![CDATA[vim配置和插件管理]]></title>
			<description>&lt;p&gt;这篇文章主要是记录vim配置中各个配置项的含义并且收藏一些常用的插件及其使用方法。&lt;/p&gt;

&lt;h1&gt;1. vim配置&lt;/h1&gt;

&lt;p&gt;目前我的vimrc配置放置在:&lt;a href=&quot;https://github.com/javachen/snippets/blob/master/dotfiles/.vimrc&quot;&gt;https://github.com/javachen/snippets/blob/master/dotfiles/.vimrc&lt;/a&gt;，其中大多数用英文注释。&lt;/p&gt;

&lt;h1&gt;2. 插件管理&lt;/h1&gt;

&lt;h2&gt;pathogen&lt;/h2&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/tpope/vim-pathogen&quot;&gt;https://github.com/tpope/vim-pathogen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;首选需要安装神器 pathogen 来管理所有的插件，具体安装可以看官网的介绍。&lt;/p&gt;

&lt;p&gt;要记得把以下内容加入到vimrc文件中:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;execute pathogen#infect()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h2&gt;NERDTree&lt;/h2&gt;

&lt;p&gt;NERD tree允许你在Vim编辑器中以树状方式浏览系统中的文件和目录, 支持快捷键与鼠标操作, 使用起来十分方便. NERD tree能够以不同颜色高亮显示节点类型, 并包含书签, 过滤等实用功能. 配合taglist或txtviewer插件, 右边窗口显示本文件夹的文件, 左边窗口显示本文的文档结构, 将会使管理一个工程变得相当容易.&lt;/p&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/scrooloose/nerdtree&quot;&gt;https://github.com/scrooloose/nerdtree&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为我是从Ulipad转到Vim的，刚开始的时候没了目录树。总感觉非常的不习惯，于是找到了这个目录树插件。&lt;/p&gt;

&lt;p&gt;安装方法很简单，只要把项目clone一份到bundle目录就可以了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cd ~/.vim/bundle
git clone https://github.com/scrooloose/nerdtree.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后的插件也都是这么安装。&lt;/p&gt;

&lt;h3&gt;使用&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;在linux命令行界面，输入vim&lt;/li&gt;
&lt;li&gt;输入  :NERDTree ，回车&lt;/li&gt;
&lt;li&gt;入当前目录的树形界面，通过小键盘上下键，能移动选中的目录或文件&lt;/li&gt;
&lt;li&gt;目录前面有+号，摁Enter会展开目录，文件前面是-号，摁Enter会在右侧窗口展现该文件的内容，并光标的焦点focus右侧。&lt;/li&gt;
&lt;li&gt;ctr+w+h  光标focus左侧树形目录，ctrl+w+l 光标focus右侧文件显示窗口。多次摁 ctrl+w，光标自动在左右侧窗口切换&lt;/li&gt;
&lt;li&gt;光标focus左侧树形窗口，按 ? 弹出NERDTree的帮助，再次按？关闭帮助显示&lt;/li&gt;
&lt;li&gt;输入:q回车，关闭光标所在窗口&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;除了使用鼠标可以基本操作以外，还可以使用键盘。下面列出常用快捷键&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;o 打开关闭文件或者目录
t 在标签页中打开
T 在后台标签页中打开
! 执行此文件
p 到上层目录
P 到根目录
K 到第一个节点
J 到最后一个节点
u 打开上层目录
m 显示文件系统菜单（添加、删除、移动操作）
? 帮助
q 关闭
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;NERDTree-Tabs&lt;/h2&gt;

&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/jistr/vim-nerdtree-tabs&quot;&gt;https://github.com/jistr/vim-nerdtree-tabs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装完NERDTree以后我觉得还需要安装一下NERDTree-Tabs这个插件，提供了很多NERDTree的加强功能，包括保持 目录树状态、优化tab标题等等。&lt;/p&gt;

&lt;p&gt;可以把一下内容添加到vimrc文件中&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;let g:nerdtree_tabs_open_on_console_startup=1       &amp;quot;设置打开vim的时候默认打开目录树
map &amp;lt;leader&amp;gt;n &amp;lt;plug&amp;gt;NERDTreeTabsToggle &amp;lt;CR&amp;gt;         &amp;quot;设置打开目录树的快捷键
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;supertab&lt;/h2&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/ervandew/supertab&quot;&gt;https://github.com/ervandew/supertab&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;增强tab键的功能，建议安装。&lt;/p&gt;

&lt;h2&gt;ctrlp&lt;/h2&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/kien/ctrlp.vim&quot;&gt;https://github.com/kien/ctrlp.vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;快捷键：&lt;code&gt;ctrl+p&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;3. 参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wklken/k-vim&quot;&gt;https://github.com/wklken/k-vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/question/19989337&quot;&gt;http://www.zhihu.com/question/19989337&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/ma6174/archive/2011/12/10/2283393.html&quot;&gt;http://www.cnblogs.com/ma6174/archive/2011/12/10/2283393.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
			<link>http://blog.javachen.com/java/2014/01/14/vim-config-and-plugins</link>
			<guid>http://blog.javachen.com/java/2014/01/14/vim-config-and-plugins</guid>
			<pubDate>Tue, 14 Jan 2014 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[SiteMesh介绍]]></title>
			<description>&lt;h1&gt;1. SiteMesh简介&lt;/h1&gt;

&lt;p&gt;SiteMesh是由一个基于Web页面布局、装饰以及与现存Web应用整合的框架。它能帮助我们在由大量页面构成的项目中创建一致的页面布局和外观，如一致的导航条，一致的banner，一致的版权等等。它不仅仅能处理动态的内容，如jsp，php，asp等产生的内容，它也能处理静态的内容，如htm的内容，使得它的内容也符合你的页面结构的要求。甚至于它能将HTML文件象include那样将该文件作为一个面板的形式嵌入到别的文件中去。所有的这些，都是GOF的Decorator模式的最生动的实现。尽管它是由java语言来实现的，但它能与其他Web应用很好地集成。&lt;/p&gt;

&lt;h1&gt;2. SiteMesh原理&lt;/h1&gt;

&lt;p&gt;SiteMesh框架是OpenSymphony团队开发的一个非常优秀的页面装饰器框架，它通过对用户请求进行过滤，并对服务器向客户端响应也进行过滤，然后给原始页面加入一定的装饰(header,footer等)，然后把结果返回给客户端。通过SiteMesh的页面装饰，可以提供更好的代码复用，所有的页面装饰效果耦合在目标页面中，无需再使用include指令来包含装饰效果，目标页与装饰页完全分离，如果所有页面使用相同的装饰器，可以是整个Web应用具有统一的风格。&lt;/p&gt;

&lt;h1&gt;3. SiteMesh3&lt;/h1&gt;

&lt;p&gt;SiteMesh3只有Alpha2版本而且很久没更新了，和SpringMVC配合，有些静态内容会出现NO Content的错误。 虽然它号称性能快3倍内存少1倍，但还是保险起见依然用SiteMesh2了。&lt;/p&gt;

&lt;p&gt;另外，Atlassian公司因为在自己的产品中使用了SiteMesh2，所以后来也一直有维护，出到了2.5-atlassian-9版，不过不在maven中央库中，可以在&lt;a href=&quot;https://maven-us.nuxeo.org/nexus/content/groups/public/opensymphony/sitemesh/2.5-atlassian-9/&quot;&gt;这里&lt;/a&gt;下载。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1&gt;4. SiteMesh2的使用&lt;/h1&gt;

&lt;h2&gt;引入SiteMesh的依赖&lt;/h2&gt;

&lt;p&gt;在pom.xml中添加如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;xml language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;opensymphony&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;sitemesh&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.4.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;runtime&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;添加过滤器&lt;/h2&gt;

&lt;p&gt;在web.xml中添加过滤器：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;xml language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;filter&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;sitemesh&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-class&amp;gt;&lt;/span&gt;com.opensymphony.module.sitemesh.filter.PageFilter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-class&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-mapping&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;sitemesh&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-mapping&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;新建decorators.xml文件&lt;/h2&gt;

&lt;p&gt;在WEB-INF下新建decorators.xml文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;xml language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;decorators&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defaultdir=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/WEB-INF/layouts/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 此处用来定义不需要过滤的页面 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;excludes&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;/static/*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/excludes&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 用来定义装饰器要过滤的页面 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;decorator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;default.jsp&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;/*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/decorator&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/decorators&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;理论上SiteMesh只会搞那些MIME type为html的页面，但在配置里先exclude掉一些静态内容和API的路径会更省心。&lt;/p&gt;

&lt;h2&gt;创建装饰器页面default.jsp&lt;/h2&gt;

&lt;p&gt;在decorators.xml中定义了一个装饰页面default.jsp：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt; %@ taglib uri=&amp;quot;http://www.opensymphony.com/sitemesh/decorator&amp;quot; prefix=&amp;quot;decorator&amp;quot; %&amp;gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My Site - &lt;span class=&quot;nt&quot;&gt;&amp;lt;decorator:title&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Welcome!&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html;charset=utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Cache-Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;no-store&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Pragma&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;no-cache&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Expires&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;decorator:head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;decorator:body&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;装饰模板中可以使用的Sitemesh标签有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;取出被装饰页面的head标签中的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;decorator:head /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;取出被装饰页面的body标签中的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;decorator:body /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;取出被装饰页面的title标签中的内容。default为默认值&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;decorator:title default=&amp;quot;&amp;quot;  /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;取出被装饰页面相关标签的属性值。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;decorator:getProperty property=&amp;quot;&amp;quot; default=&amp;quot;&amp;quot;  writeEntireProperty=&amp;quot;&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;将被装饰页面构造为一个对象，可以在装饰页面的JSP中直接引用。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;decorator:usePage id=&amp;quot;&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;创建被装饰页面test.jsp&lt;/h2&gt;

&lt;p&gt;创建test.jsp如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello world&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;hello world.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;测试&lt;/h2&gt;

&lt;p&gt;访问test.jsp页面，查看源代码会显示如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My Site - Hello world&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html;charset=utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Cache-Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;no-store&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Pragma&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;no-cache&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Expires&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;hello world.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;5. 参考文章&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&quot;https://github.com/sitemesh/sitemesh2#readme&quot;&gt;OpenSymphony SiteMesh Readme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&quot;https://github.com/springside/springside4/wiki/SiteMesh&quot;&gt;springside4 wiki:SiteMesh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
			<link>http://blog.javachen.com/java/2014/01/13/about-sitemesh</link>
			<guid>http://blog.javachen.com/java/2014/01/13/about-sitemesh</guid>
			<pubDate>Mon, 13 Jan 2014 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[重装linux-mint系统之后]]></title>
			<description>&lt;h1&gt;安装常用工具&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install ctags curl git vim tmux meld htop putty subversion  nload  iptraf iftop  openssh-server gconf-editor gnome-tweak-tool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装ibus&lt;/h1&gt;

&lt;p&gt;只需要安装gnome-language-selector ，不用安装im-switch，然后再允许im-config，设置之后注销登陆即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install gnome-language-selector 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装gedit-markdown&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget https://gitorious.org/projets-divers/gedit-markdown/archive/master.zip
cd master
./gedit-markdown.sh install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h1&gt;安装wiz&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo add-apt-repository ppa:wiznote-team
sudo apt-get update
sudo apt-get install wiznote
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装 oh-my-zsh&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;编辑 ~/.zshrc&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;PATH=$PATH:$HOME/.rvm/bin
[[ -s &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; ]] &amp;amp;&amp;amp; . &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot;

source ~/.bashrc
source ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装 RVM &amp;amp; Ruby&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;curl -sSL https://get.rvm.io | bash --ruby=1.9.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装jekyll&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;gem install jekyll redcarpet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装 virtualbox&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
sudo apt-get update
sudo apt-get install virtualbox-4.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装fortune-zh&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install fortune-zh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;/usr/bin/mint-fortune&lt;/code&gt;中调用语句改为:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/usr/games/fortune 70% tang300 30% song100 | $command -f $cow -n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里的70%与30%是显示唐诗与宋词的概率。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;gsettings set com.linuxmint.terminal show-fortunes true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;修改分区权限&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo chown -R june:june /chan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;配置ant、maven和ivy仓库&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chmod +x /chan/opt/apache-maven-3.0.5/bin/mvn
chmod +x /chan/opt/apache-ant-1.9.2/bin/ant

rm -rf /home/june/.ivy2/cache /home/june/.m2/repository
mkdir -p /home/june/.ivy2 /home/june/.m2
ln -s /chan/opt/repository/cache/  /home/june/.ivy2/cache
ln -s /chan/opt/repository/m2/  /home/june/.m2/repository
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装jdk1.6.0_31&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget http://archive.cloudera.com/cm4/ubuntu/precise/amd64/cm/pool/contrib/o/oracle-j2sdk1.6/oracle-j2sdk1.6_1.6.0+update31_amd64.deb
dpkg -i oracle-j2sdk1.6_1.6.0+update31_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置环境变量：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;if [ -f ~/.bashrc ] ; then
    sed -i &amp;#39;/^export[[:space:]]\{1,\}JAVA_HOME[[:space:]]\{0,\}=/d&amp;#39; ~/.bashrc
    sed -i &amp;#39;/^export[[:space:]]\{1,\}CLASSPATH[[:space:]]\{0,\}=/d&amp;#39; ~/.bashrc
    sed -i &amp;#39;/^export[[:space:]]\{1,\}PATH[[:space:]]\{0,\}=/d&amp;#39; ~/.bashrc
fi
echo &amp;quot;export JAVA_HOME=/usr/java/latest&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
echo &amp;quot;export CLASSPATH=.:\$JAVA_HOME/lib/tools.jar:\$JAVA_HOME/lib/dt.jar&amp;quot;&amp;gt;&amp;gt;~/.bashrc
echo &amp;quot;export MVN_HOME=/chan/opt/apache-maven-3.0.5&amp;quot; &amp;gt;&amp;gt; ~/.bashrc

echo &amp;quot;export ANT_HOME=/chan/opt/apache-ant-1.9.2&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
echo &amp;quot;export PATH=\$JAVA_HOME/bin:\$MVN_HOME/bin:\$ANT_HOME/bin:\$PATH&amp;quot; &amp;gt;&amp;gt; ~/.bashrc

update-alternatives --install /usr/bin/java java /usr/java/latest 5
update-alternatives --set java /usr/java/latest 
source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;重命名home下目录&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;mv ~/文档 ~/projects
mv ~/音乐 ~/opt
mv ~/图片 ~/tmp
mv ~/视频 ~/workspace
mv ~/下载 ~/download

ln -s /chan/opt  ~/opt
ln -s /chan/tmp   ~/tmp
ln -s /chan/projects  ~/projects
ln -s /chan/workspace  ~/workspace
ln -s /chan/download    ~/download
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<link>http://blog.javachen.com/post/2014/01/09/after-reinstall-the-system</link>
			<guid>http://blog.javachen.com/post/2014/01/09/after-reinstall-the-system</guid>
			<pubDate>Thu, 09 Jan 2014 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[Hive使用HAProxy配置HA]]></title>
			<description>&lt;p&gt;HAProxy是一款提供高可用性、负载均衡以及基于TCP（第四层）和HTTP（第七层）应用的代理软件，HAProxy是完全免费的、借助HAProxy可以快速并且可靠的提供基于TCP和HTTP应用的代理解决方案。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;免费开源，稳定性也是非常好，这个可通过我做的一些小项目可以看出来，单Haproxy也跑得不错，稳定性可以与硬件级的F5相媲美。
根据官方文档，HAProxy可以跑满10Gbps-New benchmark of HAProxy at 10 Gbps using Myricom&amp;#39;s 10GbE NICs （Myri-10G PCI-Express），这个数值作为软件级负载均衡器是相当惊人的。&lt;/li&gt;
&lt;li&gt;HAProxy 支持连接拒绝 : 因为维护一个连接的打开的开销是很低的，有时我们很需要限制攻击蠕虫（attack bots），也就是说限制它们的连接打开从而限制它们的危害。 这个已经为一个陷于小型DDoS攻击的网站开发了而且已经拯救了很多站点，这个优点也是其它负载均衡器没有的。&lt;/li&gt;
&lt;li&gt;HAProxy 支持全透明代理（已具备硬件防火墙的典型特点）: 可以用客户端IP地址或者任何其他地址来连接后端服务器. 这个特性仅在Linux 2.4/2.6内核打了cttproxy补丁后才可以使用. 这个特性也使得为某特殊服务器处理部分流量同时又不修改服务器的地址成为可能。&lt;/li&gt;
&lt;li&gt;HAProxy现多于线上的Mysql集群环境，我们常用于它作为MySQL（读）负载均衡；&lt;/li&gt;
&lt;li&gt;自带强大的监控服务器状态的页面，实际环境中我们结合Nagios进行邮件或短信报警，这个也是我非常喜欢它的原因之一；&lt;/li&gt;
&lt;li&gt;HAProxy支持虚拟主机，许多朋友说它不支持虚拟主机是错误的，通过测试我们知道，HAProxy是支持虚拟主机的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HAProxy特别适用于那些负载特大的web站点， 这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1&gt;安装配置&lt;/h1&gt;

&lt;p&gt;在&lt;a href=&quot;http://haproxy.1wt.eu/&quot;&gt;HAProxy&lt;/a&gt;官网下载安装包并编译&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget http://haproxy.1wt.eu/download/1.4/src/haproxy-1.4.24.tar.gz|tar zxvf
mv haproxy-1.4.24 /opt/haproxy-1.4.24
cd /opt/haproxy-1.4.24
make TARGET=linux26
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;添加配置文件&lt;/h1&gt;

&lt;p&gt;在/opt/haproxy-1.4.24目录下创建一个config.cfg文件，添加如下内容：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;global
        daemon
        nbproc 1
        pidfile /var/run/haproxy.pid
        ulimit-n 65535

defaults
        mode tcp                        #mode { tcp|http|health }，tcp 表示4层，http表示7层(对我们没用)，health仅作为健康检查使用
        retries 2                       #尝试2次失败则从集群摘除
        option redispatch               #如果失效则强制转换其他服务器
        option abortonclose             #连接数过大自动关闭
        maxconn 1024                    #最大连接数
        timeout connect 1d              #连接超时时间，重要，hive查询数据能返回结果的保证
        timeout client 1d               #同上
        timeout server 1d               #同上
        timeout check 2000              #健康检查时间
        log 127.0.0.1 local0 err #[err warning info debug]

listen  admin_stats                     #定义管理界面
        bind 0.0.0.0:1090               #管理界面访问IP和端口
        mode http                       #管理界面所使用的协议
        maxconn 10          #最大连接数
        stats refresh 30s               #30秒自动刷新
        stats uri /                     #访问url
        stats realm Hive\ Haproxy       #验证窗口提示
        stats auth admin:123456         #401验证用户名密码

listen hive             #hive后端定义
        bind 0.0.0.0:10001              #ha作为proxy所绑定的IP和端口
        mode tcp                        #以4层方式代理，重要
        balance leastconn               #调度算法 &amp;#39;leastconn&amp;#39; 最少连接数分配，或者 &amp;#39;roundrobin&amp;#39;，轮询分配
        maxconn 1024                    #最大连接数
        server hive_1 192.168.1.1:10000 check inter 180000 rise 1 fall 2
        server hive_2 192.168.1.2:10000 check inter 180000 rise 1 fall 2
    #释义：server 主机代名(你自己能看懂就行)，IP:端口 每180000毫秒检查一次。也就是三分钟。
    #hive每有10000端口的请求就会创建一个log，设置短了，/tmp下面会有无数个log文件，删不完。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;如何启动&lt;/h1&gt;

&lt;p&gt;在HAProxy目录下执行如下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;haproxy -f conf.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;如何使用&lt;/h1&gt;

&lt;p&gt;在hive-server或者hive-server2中jdbc的连接信息修改url和port，如hive-server2:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;jdbc:hive2://${haproxy.hostname}:${haproxy.hive.bind.port}/${hive.database}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面haproxy.hostname为你安装haproxy的机器名；haproxy.hive.bind.port为conf.cfg中定义的监听hive的端口（上面中定义的为10001）&lt;/p&gt;

&lt;h1&gt;参考资料&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&quot;http://blog.csdn.net/xiyf2046/article/details/11686873&quot;&gt;HAProxy---HAProxy简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&quot;http://slaytanic.blog.51cto.com/2057708/803626&quot;&gt;HAProxy+Hive构建高可用数据挖掘集群&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
			<link>http://blog.javachen.com/hive/2014/01/08/hive-ha-by-haproxy</link>
			<guid>http://blog.javachen.com/hive/2014/01/08/hive-ha-by-haproxy</guid>
			<pubDate>Wed, 08 Jan 2014 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[git配置和一些常用命令]]></title>
			<description>&lt;p&gt;Git是一个分布式版本控制／软件配置管理软件，原来是linux内核开发者林纳斯·托瓦兹（Linus Torvalds）为了更好地管理linux内核开发而创立的。&lt;/p&gt;

&lt;h1&gt;Git配置&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.name &amp;quot;javachen&amp;quot;
git config --global user.email &amp;quot;june.chan@foxmail.com&amp;quot;
git config --global color.ui true
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git config -l  # 列举所有配置
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;用户的git配置文件在&lt;code&gt;~/.gitconfig&lt;/code&gt;，我的配置：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;june@june-mint ~/workspace/snippets/dotfiles $ cat .gitconfig 
[user]
    email = june.chan@foxmail.com
    name = javachen
[color]
    ui = auto
[color &amp;quot;branch&amp;quot;]
    current = yellow reverse
    local = yellow
    remote = green
[color &amp;quot;diff&amp;quot;]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color &amp;quot;status&amp;quot;]
    added = yellow
    changed = green
    untracked = cyan
[alias]
    st = &amp;quot;status&amp;quot;
    co = checkout
    ls = &amp;quot;ls-files&amp;quot;
    ci = commit
    br = branch
    rt = reset --hard
    unstage = reset HEAD
    uncommit = reset --soft HEAD^
    l = log --pretty=oneline --abbrev-commit --graph --decorate
    amend = commit --amend 
    who = shortlog -n -s --no-merges 
    g = grep -n --color -E 
    cp = cherry-pick -x 
    cb = checkout -b 
[core]
    filemode = true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Git常用命令&lt;/h1&gt;

&lt;h2&gt;查看、添加、提交、删除、找回，重置修改文件&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git help &amp;lt;command&amp;gt;  # 显示command的help
git show            # 显示某次提交的内容
git show $id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git co  -- &amp;lt;file&amp;gt;   # 抛弃工作区修改
git co  .           # 抛弃工作区修改
git co HEAD &amp;lt;file&amp;gt;  # 抛弃工作目录区中文件的修改
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git add &amp;lt;file&amp;gt;      # 将工作文件修改提交到本地暂存区
git add .           # 将所有修改过的工作文件提交暂存区
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git rm &amp;lt;file&amp;gt;       # 从版本库中删除文件
git rm &amp;lt;file&amp;gt; --cached  # 从版本库中删除文件，但不删除文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git reset &amp;lt;file&amp;gt;    # 从暂存区恢复到工作文件
git reset -- .      # 从暂存区恢复到工作文件
git reset --hard    # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改
git reset HEAD &amp;lt;file&amp;gt; # 抛弃工作目录区中文件的修改
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git ci &amp;lt;file&amp;gt;
git ci .
git ci -a           # 将git add, git rm和git ci等操作都合并在一起做
git ci -am &amp;quot;some comments&amp;quot;
git ci --amend      # 修改最后一次提交记录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git revert &amp;lt;$id&amp;gt;    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象
git revert HEAD     # 恢复最后一次提交的状态
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;查看文件diff&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git diff &amp;lt;file&amp;gt;     # 比较当前文件和暂存区文件差异
git diff
git diff &amp;lt;$id1&amp;gt; &amp;lt;$id2&amp;gt;      # 比较两次提交之间的差异
git diff &amp;lt;branch1&amp;gt;..&amp;lt;branch2&amp;gt;   # 在两个分支之间比较 
git diff --staged   # 比较暂存区和版本库差异
git diff --cached   # 比较暂存区和版本库差异
git diff --stat     # 仅仅比较统计信息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;查看提交记录&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git log
git log &amp;lt;file&amp;gt;      # 查看该文件每次提交记录
git log -p &amp;lt;file&amp;gt;   # 显示版本历史，以及版本间的内容差异
git log -p -2       # 查看最近两次详细修改内容的diff
git log --stat      # 查看提交统计信息
git log --since=&amp;quot;6 hours&amp;quot;  # 显示最近6小时提交
git log --before=&amp;quot;2 days&amp;quot;  # 显示2天前提交
git log -1 HEAD~3          # 显示比HEAD早3个提交的那个提交
git log -1 HEAD^^^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Git 本地分支管理&lt;/h1&gt;

&lt;h2&gt;查看、切换、创建和删除分支&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git br -r           # 查看远程分支
git br -v           # 查看各个分支最后提交信息
git br -a           # 列出所有分支
git br --merged     # 查看已经被合并到当前分支的分支
git br --no-merged  # 查看尚未被合并到当前分支的分支
git br &amp;lt;new_branch&amp;gt; # 基于当前分支创建新的分支
git br &amp;lt;new_branch&amp;gt;  &amp;lt;start_point&amp;gt;      # 基于另一个起点（分支名称，提交名称或则标签名称），创建新的分支
git br -f &amp;lt;existing_branch&amp;gt;  &amp;lt;start_point&amp;gt;  # 创建同名新分支，覆盖已有分支
git br -d &amp;lt;branch&amp;gt;  # 删除某个分支
git br -D &amp;lt;branch&amp;gt;  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git co &amp;lt;branch&amp;gt;         # 切换到某个分支
git co -b &amp;lt;new_branch&amp;gt;  # 创建新的分支，并且切换过去
git co -b &amp;lt;new_branch&amp;gt; &amp;lt;branch&amp;gt;       # 基于branch创建新的new_branch
git co -m &amp;lt;existing_branch&amp;gt; &amp;lt;new_branch&amp;gt;  # 移动或重命名分支，当新分支不存在时
git co -M &amp;lt;existing_branch&amp;gt; &amp;lt;new_branch&amp;gt;  # 移动或重命名分支，当新分支存在时就覆盖

git co $id               # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除
git co $id -b &amp;lt;new_branch&amp;gt;       # 把某次历史提交记录checkout出来，创建成一个分支
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;分支合并和rebase&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git merge &amp;lt;branch&amp;gt;                  # 将branch分支合并到当前分支
git merge origin/master --no-ff     # 不要Fast-Foward合并，这样可以生成merge提交
git merge --no-commit &amp;lt;branch&amp;gt;      # 合并但不提交
git merge --squash &amp;lt;branch&amp;gt;         # 把一条分支上的内容合并到另一个分支上的一个提交

git rebase master &amp;lt;branch&amp;gt;          # 将master rebase到branch，相当于：
git co &amp;lt;branch&amp;gt; &amp;amp;&amp;amp; git rebase master &amp;amp;&amp;amp; git co master &amp;amp;&amp;amp; git merge &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Git补丁管理&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git diff &amp;gt; ../sync.patch         # 生成补丁
git apply ../sync.patch          # 打补丁
git apply --check ../sync.patch  # 测试补丁能否成功
git format-patch -X              # 根据提交的log生成patch，X为数字，表示最近的几个日志
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Git暂存管理&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git stash                        # 暂存
git stash list                   # 列所有stash
git stash apply                  # 恢复暂存的内容
git stash drop                   # 删除暂存区
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Git远程分支管理&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git pull                         # 抓取远程仓库所有分支更新并合并到本地
git pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并
git fetch origin                 # 抓取远程仓库所有更新
git fetch origin remote-branch:local-branch #抓取remote-branch分支的更新
git merge origin/master          # 将远程主分支合并到本地当前分支
git co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支
git co -b &amp;lt;local_branch&amp;gt; origin/&amp;lt;remote_branch&amp;gt;  # 基于远程分支创建本地分支，功能同上
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git push                         # push所有分支
git push origin master           # 将本地主分支推到远程主分支
git push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)
git push origin &amp;lt;local_branch&amp;gt;   # 创建远程分支， origin是远程仓库名
git push origin &amp;lt;local_branch&amp;gt;:&amp;lt;remote_branch&amp;gt;  # 创建远程分支
git push origin :&amp;lt;remote_branch&amp;gt;  #先删除本地分支(git br -d &amp;lt;branch&amp;gt;)，然后再push删除远程分支
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Git远程仓库管理&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git remote -v                    # 查看远程服务器地址和仓库名称
git remote show origin           # 查看远程服务器仓库状态
git remote add origin git@github:XXX/test.git         # 添加远程仓库地址
git remote set-url origin git@github.com:XXX/test.git # 设置远程仓库地址(用于修改远程仓库地址)
git remote rm &amp;lt;repository&amp;gt;       # 删除远程仓库
git remote set-head origin master   # 设置远程仓库的HEAD指向master分支

git branch --set-upstream master origin/master
git branch --set-upstream develop origin/develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;实例&lt;/h1&gt;

&lt;h2&gt;打patch过程&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git add .
git status
git diff --cached &amp;gt;XXX.patch
git ci -m &amp;#39;add patch&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<link>http://blog.javachen.com/git/2013/12/27/some-git-configs-and-cammands</link>
			<guid>http://blog.javachen.com/git/2013/12/27/some-git-configs-and-cammands</guid>
			<pubDate>Fri, 27 Dec 2013 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[SaltStack学习笔记[未完成]]]></title>
			<description>&lt;h1&gt;1. 关于本文档&lt;/h1&gt;

&lt;p&gt;这份文档如其名，是我自己整理的学习 SaltStack 的过程记录。只是过程记录，没有刻意像教程那样去做。所以呢，从前至后，中间不免有一些概念不清不明的地方。因为事实上，在某个阶段对于一些概念本来就不可能明白。所以，整个过程只求在形式上的能用即可。前面就不要太纠结概念和原理，知道怎么用就好。&lt;/p&gt;

&lt;p&gt;希望这篇文章能够让你快速了解并使用saltstack。文章还在编写中。&lt;/p&gt;

&lt;h1&gt;2. 关于SaltStack&lt;/h1&gt;

&lt;h2&gt;2.1. 什么是SaltStack&lt;/h2&gt;

&lt;p&gt;SaltStack是开源的管理基础设置的轻量级工具，容易搭建，为远程管理服务器提供一种更好、更快速、更有扩展性的解决方案。通过简单、可管理的接口，Salt实现了可以管理成千上百的服务器和处理大数据的能力。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;轻量级配置管理系统，能够维持远端节点运行在预定状态（例如，确保指定的软件包已经安装和特定的系统服务正在运行）&lt;/li&gt;
&lt;li&gt;分布式远程执行系统，用于在远端节点执行命令和查询数据，可以是单独，也可以是选定的条件&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h2&gt;2.2. SaltStack特点&lt;/h2&gt;

&lt;h3&gt;简单&lt;/h3&gt;

&lt;p&gt;兼顾大规模部署与更小的系统的同时提供多功能性是很困难的，Salt是非常简单配置和维护，不管项目的大小。Salt可以胜任管理任意的数量的服务器，不管是本地网络，还是跨数据中心。架构采用C/S模式，在一个后台程序中集成必要功能。默认不需要复杂的配置就可以工作，同时可以定制用于特殊的需求。&lt;/p&gt;

&lt;h3&gt;并行执行&lt;/h3&gt;

&lt;p&gt;Salt的核心功能：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过并行方式让远端节点执行命令&lt;/li&gt;
&lt;li&gt;采用安全的加密/解析协议&lt;/li&gt;
&lt;li&gt;最小化使用网络和负载&lt;/li&gt;
&lt;li&gt;提供简单的程序接口&lt;/li&gt;
&lt;li&gt;Salt引入了更细粒度的控制，允许不通过目标名字，二是通过系统属性分类&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;构建在成熟技术之上&lt;/h3&gt;

&lt;p&gt;Salt采用了很多技术和技巧。网络层采用优秀的ZeroMQ库，所以守护进程里面包含AMQ代理。Salt采用公钥和主控通讯，同时使用更快的AES加密通信，验证和加密都已经集成在Salt里面。Salt使用msgpack通讯，所以更快速和更轻量网络交换。&lt;/p&gt;

&lt;h3&gt;Python 客户端接口&lt;/h3&gt;

&lt;p&gt;为了实现简单的扩展，Salt执行例程可以写成简单的Python模块。客户端程序收集的数据可以发送回主控端，可以是其他任意程序。可以通过Python API调用Salt程序，或者命令行，因此，Salt可以用来执行一次性命令，或者大型应用程序中的一部分模块。&lt;/p&gt;

&lt;h3&gt;快速，灵活，可扩展&lt;/h3&gt;

&lt;p&gt;结果是一个系统可以高速在一台或者一组服务器执行命令。Salt速度很快，配置简单，扩展性好，提供了一个远程执行架构，可以管理多样化需求的任何数量的服务器。整合了世界上最好的远程执行方法，增强处理能力，扩展使用范围，使得可以适用任何多样化复杂的网络。&lt;/p&gt;

&lt;h3&gt;开源&lt;/h3&gt;

&lt;p&gt;Salt基于Apache 2.0 licence开发，可以用于开源或者自有项目。请反馈你的扩展给项目组，以便更多人受益，共同促进Salt发展。请在你的系统部署 系统，让运维更便捷。&lt;/p&gt;

&lt;p&gt;开发语言：Python&lt;/p&gt;

&lt;h2&gt;2.3. 支持的系统&lt;/h2&gt;

&lt;p&gt;常见的系统包可以直接下载安装使用：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://admin.fedoraproject.org/pkgdb/acls/name/salt&quot;&gt;Fedora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RedHat Enterprise Linux / Centos (&lt;a href=&quot;http://dl.fedoraproject.org/pub/epel/5/x86_64/repoview/salt.html&quot;&gt;EPEL 5&lt;/a&gt;, &lt;a href=&quot;http://dl.fedoraproject.org/pub/epel/6/x86_64/repoview/salt.html&quot;&gt;EPEL 6&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://launchpad.net/%7Esaltstack&quot;&gt;Ubuntu (PPA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aur.archlinux.org/packages.php?ID=47512&quot;&gt;Arch (AUR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.freebsd.org/cgi/cvsweb.cgi/ports/sysutils/salt/&quot;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://packages.gentoo.org/package/app-admin/salt&quot;&gt;Gentoo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://packages.debian.org/sid/salt-master&quot;&gt;Debian (sid)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://packages.debian.org/experimental/salt-master&quot;&gt;Debian (experimental)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;3. 安装SaltStack&lt;/h1&gt;

&lt;h2&gt;3.1. 依赖&lt;/h2&gt;

&lt;p&gt;SaltStack只能安装在类unix的操作系统上并依赖以下组件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://python.org/download/&quot;&gt;Python 2.6&lt;/a&gt; &amp;gt;= 2.6 &amp;lt;3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zeromq.org/&quot;&gt;ZeroMQ&lt;/a&gt; &amp;gt;= 2.1.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zeromq/pyzmq&quot;&gt;pyzmq&lt;/a&gt; &amp;gt;= 2.1.9 - ZeroMQ Python bindings&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dlitz.net/software/pycrypto/&quot;&gt;PyCrypto&lt;/a&gt; - The Python cryptography toolkit&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pypi.python.org/pypi/msgpack-python/0.1.12&quot;&gt;msgpack-python&lt;/a&gt; - High-performance message interchange format&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pyyaml.org/&quot;&gt;YAML&lt;/a&gt; - Python YAML bindings&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja2&lt;/a&gt; - parsing Salt States (configurable in the master settings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可选的依赖：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.makotemplates.org/&quot;&gt;mako&lt;/a&gt; - an optional parser for Salt States (configurable in the master settings)&lt;/li&gt;
&lt;li&gt;gcc - dynamic &lt;a href=&quot;http://cython.org/&quot;&gt;Cython&lt;/a&gt; module compiling&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;3.2. 快速安装&lt;/h2&gt;

&lt;p&gt;可以使用官方提供的&lt;a href=&quot;https://github.com/saltstack/salt-bootstrap&quot;&gt;Salt Bootstrap&lt;/a&gt;来快速安装SaltStack。&lt;/p&gt;

&lt;p&gt;安装master：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;curl -L http://bootstrap.saltstack.org | sudo sh -s -- -M -N
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装minion：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget -O - http://bootstrap.saltstack.org | sudo sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当前&lt;a href=&quot;https://github.com/saltstack/salt-bootstrap&quot;&gt;Salt Bootstrap&lt;/a&gt;已经在以下操作系统测试通过：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu 10.x/11.x/12.x&lt;/li&gt;
&lt;li&gt;Debian 6.x&lt;/li&gt;
&lt;li&gt;CentOS 6.3&lt;/li&gt;
&lt;li&gt;Fedora&lt;/li&gt;
&lt;li&gt;Arch&lt;/li&gt;
&lt;li&gt;FreeBSD 9.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;3.3. 通过rpm安装&lt;/h2&gt;

&lt;h3&gt;3.3.1. 下载EPEL yum源：&lt;/h3&gt;

&lt;p&gt;RHEL 5系统: &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;rpm -Uvh http://mirror.pnl.gov/epel/5/i386/epel-release-5-4.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;RHEL 6系统:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;rpm -Uvh http://ftp.linux.ncsu.edu/pub/epel/6/i386/epel-release-6-8.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.3.2. 安装包&lt;/h3&gt;

&lt;p&gt;在master上运行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install salt-master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在minion上运行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install salt-minion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.3.3. 安装后&lt;/h3&gt;

&lt;p&gt;master上设置开启启动并启动服务：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chkconfig salt-master on
service salt-master start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;minion上设置开启启动并启动服务：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chkconfig salt-minion on
service salt-minion start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.4. 排错&lt;/h3&gt;

&lt;p&gt;当前最新版为0.17.1，如果你也是使用的这个版本并且启动提示如下错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 vagrant]# /etc/init.d/salt-master start
Starting salt-master daemon: Traceback (most recent call last):
 File &amp;quot;/usr/bin/salt-master&amp;quot;, line 10, in &amp;lt;module&amp;gt;
   salt_master()
 File &amp;quot;/usr/lib/python2.6/site-packages/salt/scripts.py&amp;quot;, line 20, in salt_master
   master.start()
 File &amp;quot;/usr/lib/python2.6/site-packages/salt/__init__.py&amp;quot;, line 114, in start
   if check_user(self.config[&amp;#39;user&amp;#39;]):
 File &amp;quot;/usr/lib/python2.6/site-packages/salt/utils/verify.py&amp;quot;, line 296, in check_user
   if user in e.gr_mem] + [pwuser.gid])
AttributeError: &amp;#39;pwd.struct_passwd&amp;#39; object has no attribute &amp;#39;gid&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过google搜索关键字&lt;code&gt;saltstack &amp;#39;pwd.struct_passwd&amp;#39; object has no attribute &amp;#39;gid&amp;#39;&lt;/code&gt;，可以找到这个&lt;a href=&quot;https://github.com/saltstack/salt/issues/8176&quot;&gt;issues&lt;/a&gt;，查看评论可以发现这是一个bug，将会在0.17.2中被修复。&lt;/p&gt;

&lt;p&gt;我的解决方法是：下载saltstack源码重新编译&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget https://github.com/saltstack/salt/archive/develop.zip
unzip develop
cd salt-develop/
python2.6 setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;4. 配置SaltStack&lt;/h1&gt;

&lt;h2&gt;4.1. master配置&lt;/h2&gt;

&lt;p&gt;master不修改配置文件就可以运行，而minion必须修改配置文件中的master id才能和master通讯，配置文件分别在&lt;code&gt;/etc/salt/master&lt;/code&gt; 和 &lt;code&gt;/etc/salt/minion&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;master默认监控0.0.0.0上4505和4506端口，你可以在&lt;code&gt;/etc/salt/master&lt;/code&gt;中修改为指定ip。&lt;/p&gt;

&lt;p&gt;master关键配置：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;interface&lt;/li&gt;
&lt;li&gt;publish_port&lt;/li&gt;
&lt;li&gt;user&lt;/li&gt;
&lt;li&gt;max&lt;u&gt;open&lt;/u&gt;files&lt;/li&gt;
&lt;li&gt;worker_threads&lt;/li&gt;
&lt;li&gt;ret_port&lt;/li&gt;
&lt;li&gt;pidfile&lt;/li&gt;
&lt;li&gt;root_dir&lt;/li&gt;
&lt;li&gt;pki_dir&lt;/li&gt;
&lt;li&gt;cachedir&lt;/li&gt;
&lt;li&gt;keep_jobs&lt;/li&gt;
&lt;li&gt;job_cache&lt;/li&gt;
&lt;li&gt;ext&lt;u&gt;job&lt;/u&gt;cache&lt;/li&gt;
&lt;li&gt;minion&lt;u&gt;data&lt;/u&gt;cache&lt;/li&gt;
&lt;li&gt;enforce&lt;u&gt;mine&lt;/u&gt;cache&lt;/li&gt;
&lt;li&gt;sock_dir&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Master Security配置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open_mode&lt;/li&gt;
&lt;li&gt;auto_accept&lt;/li&gt;
&lt;li&gt;autosign_file&lt;/li&gt;
&lt;li&gt;client_acl&lt;/li&gt;
&lt;li&gt;client&lt;u&gt;acl&lt;/u&gt;blacklist&lt;/li&gt;
&lt;li&gt;external_auth&lt;/li&gt;
&lt;li&gt;token_expire&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Master Module管理&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;runner_dirs&lt;/li&gt;
&lt;li&gt;cython_enable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Master State设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;state_verbose&lt;/li&gt;
&lt;li&gt;state_output&lt;/li&gt;
&lt;li&gt;state_top&lt;/li&gt;
&lt;li&gt;external_nodes&lt;/li&gt;
&lt;li&gt;renderer&lt;/li&gt;
&lt;li&gt;failhard&lt;/li&gt;
&lt;li&gt;test&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Master File Server设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fileserver_backend&lt;/li&gt;
&lt;li&gt;file_roots&lt;/li&gt;
&lt;li&gt;hash_type&lt;/li&gt;
&lt;li&gt;file&lt;u&gt;buffer&lt;/u&gt;size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pillar配置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pillar_roots&lt;/li&gt;
&lt;li&gt;ext_pillar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Syndic Server设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;order_masters&lt;/li&gt;
&lt;li&gt;syndic_master&lt;/li&gt;
&lt;li&gt;syndic&lt;u&gt;master&lt;/u&gt;port&lt;/li&gt;
&lt;li&gt;syndic&lt;u&gt;log&lt;/u&gt;file&lt;/li&gt;
&lt;li&gt;syndic_pidfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Peer发布设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;peer&lt;/li&gt;
&lt;li&gt;peer_run&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node Groups设置&lt;/p&gt;

&lt;p&gt;Master Logging设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;log_file&lt;/li&gt;
&lt;li&gt;log_level&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;level&lt;/u&gt;logfile&lt;/li&gt;
&lt;li&gt;log_datefmt&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;datefmt&lt;/u&gt;logfile&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;fmt&lt;/u&gt;console&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;fmt&lt;/u&gt;logfile&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;granular&lt;/u&gt;levels&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Include配置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;default_include&lt;/li&gt;
&lt;li&gt;include&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;4.4. minion配置&lt;/h2&gt;

&lt;p&gt;Minion主要配置：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;master&lt;/li&gt;
&lt;li&gt;master_port&lt;/li&gt;
&lt;li&gt;user&lt;/li&gt;
&lt;li&gt;pidfile&lt;/li&gt;
&lt;li&gt;root_dir&lt;/li&gt;
&lt;li&gt;pki_dir&lt;/li&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;append_domain&lt;/li&gt;
&lt;li&gt;cachedir&lt;/li&gt;
&lt;li&gt;verify_env&lt;/li&gt;
&lt;li&gt;cache_jobs&lt;/li&gt;
&lt;li&gt;sock_dir&lt;/li&gt;
&lt;li&gt;backup_mode&lt;/li&gt;
&lt;li&gt;acceptance&lt;u&gt;wait&lt;/u&gt;time&lt;/li&gt;
&lt;li&gt;random&lt;u&gt;reauth&lt;/u&gt;delay&lt;/li&gt;
&lt;li&gt;cceptance&lt;u&gt;wait&lt;/u&gt;time_max&lt;/li&gt;
&lt;li&gt;dns_check&lt;/li&gt;
&lt;li&gt;ipc_mode&lt;/li&gt;
&lt;li&gt;tcp&lt;u&gt;pub&lt;/u&gt;port&lt;/li&gt;
&lt;li&gt;tcp&lt;u&gt;pull&lt;/u&gt;port&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Minion Module管理&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;disable_modules&lt;/li&gt;
&lt;li&gt;disable_returners&lt;/li&gt;
&lt;li&gt;module_dirs&lt;/li&gt;
&lt;li&gt;returner_dirs&lt;/li&gt;
&lt;li&gt;states_dirs&lt;/li&gt;
&lt;li&gt;render_dirs&lt;/li&gt;
&lt;li&gt;cython_enable&lt;/li&gt;
&lt;li&gt;providers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;State Management 设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;renderer&lt;/li&gt;
&lt;li&gt;state_verbose&lt;/li&gt;
&lt;li&gt;state_output&lt;/li&gt;
&lt;li&gt;autoload&lt;u&gt;dynamic&lt;/u&gt;modules&lt;/li&gt;
&lt;li&gt;environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;File目录设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;file_client&lt;/li&gt;
&lt;li&gt;file_roots&lt;/li&gt;
&lt;li&gt;hash_type&lt;/li&gt;
&lt;li&gt;pillar_roots&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Security设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open_mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;线程设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;multiprocessing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Minion日志设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;log_file&lt;/li&gt;
&lt;li&gt;log_level&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;level&lt;/u&gt;logfile&lt;/li&gt;
&lt;li&gt;log_datefmt&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;datefmt&lt;/u&gt;logfile&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;fmt&lt;/u&gt;console&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;fmt&lt;/u&gt;logfile&lt;/li&gt;
&lt;li&gt;log&lt;u&gt;granular&lt;/u&gt;levels&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Include配置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;default_include&lt;/li&gt;
&lt;li&gt;include&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Frozen Build Update Settings&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;update_url&lt;/li&gt;
&lt;li&gt;update&lt;u&gt;restart&lt;/u&gt;services&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;5. 初识SaltStack&lt;/h1&gt;

&lt;h2&gt;5.1. 配置&lt;/h2&gt;

&lt;p&gt;参考上面的配置文件说明修改master和minion配置。这里我的master主机名为sk1，minion主机名为sk2。&lt;/p&gt;

&lt;p&gt;修改master配置文件/etc/salt/master&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;interface: 0.0.0.0
auto_accept: True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改minion配置文件/etc/salt/minion&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;master: sk1
id: sk2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;5.2. 运行salt&lt;/h2&gt;

&lt;p&gt;然后运行salt，启动master（添加&lt;code&gt;-d&lt;/code&gt;参数可以让其后台运行）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt-master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动minion（添加-d参数可以让其后台运行）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt-minion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果需要排错，可以添加设置日志级别：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt-master --log-level=debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果想以非用户运行，可以添加&lt;code&gt;--user&lt;/code&gt;参数&lt;/p&gt;

&lt;h2&gt;5.3. 管理Key&lt;/h2&gt;

&lt;p&gt;Salt在master和minion通信之间使用AES加密。在master和minion通信之前，minion上的key需要发送到master并被master接受。可以在master上查看已经接受的key：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 pillar]# salt-key -L
Accepted Keys:
Unaccepted Keys:
sk2
Rejected Keys:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后运行下面命令可以接受所有未被接受的key：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 pillar]# salt-key -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;5.4. 发送命令&lt;/h2&gt;

&lt;p&gt;在master上发送ping命令检测minon是否被认证成功：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 pillar]# salt &amp;#39;*&amp;#39; test.ping
sk2:salt &amp;#39;*&amp;#39; test.ping
    True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;True表明测试成功。&lt;/p&gt;

&lt;h1&gt;6. 配置管理&lt;/h1&gt;

&lt;h2&gt;6.1 states&lt;/h2&gt;

&lt;h2&gt;6.1.1 states文件&lt;/h2&gt;

&lt;p&gt;salt states的核心是sls文件，该文件使用YAML语法定义了一些k/v的数据。&lt;/p&gt;

&lt;p&gt;sls文件存放根路径在master配置文件中定义，默认为&lt;code&gt;/srv/salt&lt;/code&gt;,该目录在操作系统上不存在，需要手动创建。&lt;/p&gt;

&lt;p&gt;在salt中可以通过&lt;code&gt;salt://&lt;/code&gt;代替根路径，例如你可以通过&lt;code&gt;salt://top.sls&lt;/code&gt;访问&lt;code&gt;/srv/salt/top.sls&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在states中top文件也由master配置文件定义，默认为top.sls，该文件为states的入口文件。&lt;/p&gt;

&lt;p&gt;一个简单的sls文件如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; apache:
  pkg:
    - installed
  service:
    - running
    - require:
      - pkg: apache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;说明：此SLS数据确保叫做&amp;quot;apache&amp;quot;的软件包(package)已经安装,并且&amp;quot;apache&amp;quot;服务(service)正在运行中。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一行，被称为ID说明(ID Declaration)。ID说明表明可以操控的名字。&lt;/li&gt;
&lt;li&gt;第二行和第四行是State说明(State Declaration)，它们分别使用了pkg和service states。pkg state通过系统的包管理其管理关键包，service state管理系统服务(daemon)。 在pkg及service列下边是运行的方法。方法定义包和服务应该怎么做。此处是软件包应该被安装，服务应该处于运行中。&lt;/li&gt;
&lt;li&gt;第六行使用require。本方法称为&amp;quot;必须指令&amp;quot;(Requisite Statement)，表明只有当apache软件包安装成功时，apache服务才启动起来。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;state和方法可以通过点连起来，上面sls文件和下面文件意思相同。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; apache:
  pkg.installed
  service.running
    - require:
      - pkg: apache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将上面sls保存为init.sls并放置&lt;code&gt;在sal://apache&lt;/code&gt;目录下，结果如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/srv/salt
├── apache
│   └── init.sls
└── top.sls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;top.sls如何定义呢？&lt;/p&gt;

&lt;p&gt;master配置文件中定义了三种环境，每种环境都可以定义多个目录，但是要避免冲突，分别如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# file_roots:
#   base:
#     - /srv/salt/
#   dev:
#     - /srv/salt/dev/services
#     - /srv/salt/dev/states
#   prod:
#     - /srv/salt/prod/services
#     - /srv/salt/prod/states
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;top.sls可以这样定义：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; base:
   &amp;#39;*&amp;#39;:
    - apache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;说明：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一行，声明使用base环境&lt;/li&gt;
&lt;li&gt;第二行，定义target，这里是匹配所有&lt;/li&gt;
&lt;li&gt;第三行，声明使用哪些states目录，salt会寻找每个目录下的init.sls文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;6.1.2 运行states&lt;/h2&gt;

&lt;p&gt;一旦创建完states并修改完top.sls之后，你可以在master上执行下面命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 salt]# salt &amp;#39;*&amp;#39; state.highstate 
sk2:
----------
    State: - pkg
    Name:      httpd
    Function:  installed
        Result:    True
        Comment:   The following packages were installed/updated: httpd.
        Changes:   
                   ----------
                   httpd:
                       ----------
                       new:
                           2.2.15-29.el6.centos
                       old:

----------
    State: - service
    Name:      httpd
    Function:  running
        Result:    True
        Comment:   Service httpd has been enabled, and is running
        Changes:   
                   ----------
                   httpd:
                       True

Summary
------------
Succeeded: 2
Failed:    0
------------
Total:     2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面命令会触发所有minion从master下载top.sls文件以及其中定一个的states，然后编译、执行。执行完之后，minion会将执行结果的摘要信息汇报给master。&lt;/p&gt;

&lt;h2&gt;6.2. Grains&lt;/h2&gt;

&lt;h2&gt;Pillar&lt;/h2&gt;

&lt;h2&gt;Renderers&lt;/h2&gt;

&lt;h1&gt;远程执行命令&lt;/h1&gt;

&lt;p&gt;在上面的例子中，test.ping是最简单的一个远程执行的命令，你还可以执行一些更加复杂的命令。&lt;/p&gt;

&lt;p&gt;salt执行命令的格式如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;&amp;lt;target&amp;gt;&amp;#39; &amp;lt;function&amp;gt; [arguments]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;target: 执行salt命令的目标，可以使用正则表达式&lt;/li&gt;
&lt;li&gt;function： 方法，由module提供&lt;/li&gt;
&lt;li&gt;arguments：function的参数 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;target可以使用正则表达式匹配：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; test.ping
salt &amp;#39;sk2&amp;#39; test.ping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;function是module提供的方法。通过下面命令可以查看所有的function：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; sys.doc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;function可以接受参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; cmd.run &amp;#39;uname -a&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;并且支持关键字参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; cmd.run &amp;#39;uname -a&amp;#39; cwd=/ user=salt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面例子意思是：在所有minion上切换到/目录以salt用户运行&lt;code&gt;uname -a&lt;/code&gt;命令。&lt;/p&gt;

&lt;p&gt;关键字参数可以参考module的&lt;a href=&quot;http://docs.saltstack.com/py-modindex.html&quot;&gt;api&lt;/a&gt;,通过api你可以查看&lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.cmd.html#salt.states.cmd.run&quot;&gt;cmd.run&lt;/a&gt;的定义：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt.states.cmd.mod_watch(name, **kwargs)
Execute a cmd function based on a watch call

salt.states.cmd.run(name, onlyif=None, unless=None, cwd=None, user=None, group=None, shell=None, env=(), stateful=False, umask=None, quiet=False, timeout=None, **kwargs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所有module中的方法定义都与上面类似，说明：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name： 第一个参数，为执行的命令&lt;/li&gt;
&lt;li&gt;中间的key=alue为keyword参数，都有默认值&lt;/li&gt;
&lt;li&gt;最后一个参数为name中命令的输入参数&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;TARGETING&lt;/h2&gt;

&lt;h2&gt;Returners&lt;/h2&gt;

&lt;h2&gt;Mine&lt;/h2&gt;

&lt;h1&gt;权限管理&lt;/h1&gt;

&lt;h1&gt;作业管理&lt;/h1&gt;

&lt;h1&gt;Logging&lt;/h1&gt;

&lt;h1&gt;参考文章&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;[1]&lt;a href=&quot;http://zhoulg.blog.51cto.com/48455/1140178&quot;&gt;Saltstack服务器集中管理和并行下发命令工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
			<link>http://blog.javachen.com/saltstack/2013/11/18/study-note-of-saltstack</link>
			<guid>http://blog.javachen.com/saltstack/2013/11/18/study-note-of-saltstack</guid>
			<pubDate>Mon, 18 Nov 2013 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[使用saltstack安装jboss]]></title>
			<description>&lt;p&gt;Saltstack是一个具备puppet与func功能为一身的集中化管理平台，saltstack基于python实现，功能十分强大，各模块融合度及复用性极高。SaltStack 采用 zeromq 消息队列进行通信，和 Puppet/Chef 比起来，SaltStack 速度快得多。&lt;/p&gt;

&lt;p&gt;在开始使用saltstack之前，首先要对Salt的基础进行一系列的学习，这里，我强烈推荐官网的&lt;a href=&quot;http://docs.saltstack.com/topics/tutorials/walkthrough.html&quot;&gt;Tutorial&lt;/a&gt;,在完成了整个Tutorial之后，通过Module Index页面，我们能够快速查阅Salt所有模块的功能与用法:&lt;a href=&quot;http://docs.saltstack.com/py-modindex.html&quot;&gt;http://docs.saltstack.com/py-modindex.html&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;安装saltstack&lt;/h1&gt;

&lt;p&gt;安装过程请参考：&lt;a href=&quot;/saltstack/2013/11/11/install-saltstack-and-halite/&quot;&gt;安装saltstack和halite&lt;/a&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1&gt;添加pillar&lt;/h1&gt;

&lt;p&gt;你可以执行下面命令查看minion拥有哪些Pillar数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; pillar.data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;saltstack的默认states目录为&lt;code&gt;/srv/salt&lt;/code&gt;，默认为&lt;code&gt;/srv/pillar&lt;/code&gt;，如果不存在请先创建。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 /]# tree /srv/ -L 3
/srv/
├── pillar
│   ├── jboss
│       ├── params.sls
│   └── top.sls
├── salt
│   ├── jboss
│   ├── _modules
│   └── top.sls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在&lt;code&gt;/srv/pillar/&lt;/code&gt;下创建top.sls，该文件引入jboss下的params.sls：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建jboss目录并添加params.sls如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt; &lt;span class=&quot;n&quot;&gt;jboss_home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;profile_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;default1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;http_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jmx_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1099&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;default2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;http_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jmx_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1199&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;default3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;http_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;02&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jmx_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1299&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;default4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;http_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jmx_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1399&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;jmx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;该文件定义了如下变量，你可以按需要定义自己的变量：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jboss_home：mimion机器上jboss的home目录&lt;/li&gt;
&lt;li&gt;profile_port：定义有多少个profile以及每个profile下的http端口和jmx端口&lt;/li&gt;
&lt;li&gt;jmx:定义jmx-console用户名和密码&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;定义变量之后，你可以在sates文件中这样引用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pillar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;profile_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;default1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面是个复杂的例子，使用了python中的模板引擎语言：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pillar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;profile_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你还可以在python脚本中或者是saltstack自定义module中这样引用变量：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;__pillar__[&amp;#39;jboss_home&amp;#39;]
__pillar__[&amp;#39;profile_port&amp;#39;][&amp;#39;default1&amp;#39;][&amp;#39;jmx_port&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在master上修改Pilla文件后，需要用以下命令刷新minion上的数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; saltutil.refresh_pillar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果定义好的pillar不生效，建议刷新一下或者重启salt试试。&lt;/p&gt;

&lt;h1&gt;编写states&lt;/h1&gt;

&lt;p&gt;/srv/salt目录如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 salt]# tree -L 3
.
├── jboss
│   ├── files
│   │   └── jboss-eap-5.1.zip
│   └── init.sls

├── _modules
│   └── jboss.py
├── top.sls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;top.sls为sates入口，定义如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; base:
  *:
    - jboss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建jboss目录并编写init.sls文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt; &lt;span class=&quot;n&quot;&gt;unzip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installed&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zip&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zip&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;include_empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;655&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;unzip jboss-eap-5.1.zip&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;test -e jboss-eap-5.1&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pillar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;profile_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;\cp -r default {{profile}}&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;test -e {{profile}}&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;1.上面文件中创建了jboss ID，其包括两部分：拷贝文件和解压缩，分别对应file.managed和cmd.run。&lt;/p&gt;

&lt;p&gt;2.然后通过脚本语言读取pillar中定义的变量并以依次遍历生成多个ID，ID名称由变量中值定义。本例中，是读取profile&lt;u&gt;port的值，然后创建多个profile。profile&lt;/u&gt;port变量在&lt;code&gt;/srv/pillar/jboss/params.sls&lt;/code&gt;中定义。&lt;/p&gt;

&lt;p&gt;编写完sates文件之后，你可以通过执行以下命令让所有minion执行sates文件中定义的state：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; state.highstate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你也可以单独执行jboss这个states：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; state.sls jboss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;自定义grains_module&lt;/h1&gt;

&lt;p&gt;自定义的&lt;code&gt;grains_module&lt;/code&gt;存放在&lt;code&gt;/srv/salt/_grains&lt;/code&gt;目录，下面定义一个获取&lt;code&gt;max_open_file&lt;/code&gt;的grains：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;commands&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Grains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;grains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;max_open_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65536&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;getulimit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getstatusoutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source /etc/profile;ulimit -n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getulimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;max_open_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getulimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;grains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;max_open_file&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_open_file&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grains&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后，同步grains模块：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; saltutil.sync_all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;刷新模块(让minion编译模块)：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; sys.reload_modules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后，验证max open file的value：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; grains.item max_open_file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;自定义module&lt;/h1&gt;

&lt;p&gt;你通过执行states可以完成bao的安装、配置和部署，如果你想对他们做管理，你可以自定义module来执行一些远程命令。&lt;/p&gt;

&lt;p&gt;自定义的module需要存放在&lt;code&gt;/srv/salt/_module&lt;/code&gt;目录下，为了对jboss实例进行启动、停止、查看运行状态，编写jboss.py模块：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_simple_cmd_retcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jboss_home&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/bin&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__salt__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;cmd.retcode&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Cmd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Result&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_simple_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jboss_home&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/bin&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__salt__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;cmd.run&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Cmd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Result&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;running&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_simple_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ps -ef|grep -v grep|grep java|grep &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; |grep &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;profile_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__grains__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;profile_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;nohup ./run.sh -b &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; -c &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; -Djboss.service.binding.set=&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;amp;&amp;#39;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;running&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Cmd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; has started&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Result&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_simple_cmd_retcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__grains__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;profile_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jmx_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jmx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jmx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;./twiddle.sh -s &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; -u &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; -p &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; get jboss.system:type=Server Started&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_simple_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ERROR&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Result&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Msg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__grains__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;profile_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jmx_port&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jmx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__pillar__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jmx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;./shutdown.sh -S -s &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; -u &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; -p &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_simple_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上python脚本定义了对单个profile的启动、停止和查看运行状态的方法，你可以修改或者扩增代码，添加更多的方法。&lt;/p&gt;

&lt;p&gt;如果你想启动jboss的default1实例，只需要执行以下方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; jboss.start default1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样，查看状态：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt &amp;#39;*&amp;#39; jboss.status default1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;jboss为自定义模块的名称，也是jboss.py的名称，start或者status为jboss.py中定义的方法。&lt;/p&gt;

&lt;h1&gt;同步配置文件&lt;/h1&gt;

&lt;p&gt;现在需要修改jmx-console-users.properties文件中的用户名和密码并将其同步到所有jboss实例中。&lt;/p&gt;

&lt;p&gt;将jmx-console-users.properties文件放置在&lt;code&gt;/srv/salt/jboss/files&lt;/code&gt;目录下，并修改该文件如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; #A sample users.properties file for use with the UsersRolesLoginModule
 pillar[&amp;#39;jmx&amp;#39;][&amp;#39;username&amp;#39;]= pillar[&amp;#39;jmx&amp;#39;][&amp;#39;password&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面文件中使用了pillar获取变量，你还可以使用模板语言如if、for语句来丰富你的文件内容，saltstack支持的模板引擎有jinja等。&lt;/p&gt;

&lt;p&gt;然后在init.sls中添加：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt; &lt;span class=&quot;n&quot;&gt;jmx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jmx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jboss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jmx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jinja&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<link>http://blog.javachen.com/saltstack/2013/11/16/install-jboss-with-saltstack</link>
			<guid>http://blog.javachen.com/saltstack/2013/11/16/install-jboss-with-saltstack</guid>
			<pubDate>Sat, 16 Nov 2013 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[安装saltstack和halite]]></title>
			<description>&lt;p&gt;本文记录安装saltstack和halite过程。&lt;/p&gt;

&lt;p&gt;首先准备两台rhel或者centos虚拟机sk1和sk2，sk1用于安装master，sk2安装minion。&lt;/p&gt;

&lt;h1&gt;下载yum源&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ivh&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//mi&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rrors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sohu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fedora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86_64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noarch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装依赖&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install python-jinja2 -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;安装saltstack&lt;/h1&gt;

&lt;p&gt;在sk1上安装master：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install salt-master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在sk1上安装minion：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install salt-minion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h1&gt;关闭防火墙&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;iptables -F
setenforce 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;修改配置文件&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/salt/master
interface: 0.0.0.0
auto_accept: True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/salt/minion
master: sk1
id: sk2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;启动&lt;/h1&gt;

&lt;p&gt;分别在sk1和sk2上配置开机启动：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chkconfig salt-master on
chkconfig salt-minion on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分别在sk1和sk2上以service方式启动：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/init.d/salt-master start
/etc/init.d/salt-minion start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你可以在sk2上以后台运行salt-minion&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt-minion -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者在sk2上debug方式运行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;salt-minion -l debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;排错&lt;/h1&gt;

&lt;p&gt;如果启动提示如下错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 vagrant]# /etc/init.d/salt-master start
Starting salt-master daemon: Traceback (most recent call last):
 File &amp;quot;/usr/bin/salt-master&amp;quot;, line 10, in &amp;lt;module&amp;gt;
   salt_master()
 File &amp;quot;/usr/lib/python2.6/site-packages/salt/scripts.py&amp;quot;, line 20, in salt_master
   master.start()
 File &amp;quot;/usr/lib/python2.6/site-packages/salt/__init__.py&amp;quot;, line 114, in start
   if check_user(self.config[&amp;#39;user&amp;#39;]):
 File &amp;quot;/usr/lib/python2.6/site-packages/salt/utils/verify.py&amp;quot;, line 296, in check_user
   if user in e.gr_mem] + [pwuser.gid])
AttributeError: &amp;#39;pwd.struct_passwd&amp;#39; object has no attribute &amp;#39;gid&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请下载saltstack源码重新编译：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget https://github.com/saltstack/salt/archive/develop.zip
unzip develop
cd salt-develop/
python2.6 setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;salt minion和master的认证过程&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;minion在第一次启动时，会在/etc/salt/pki/minion/下自动生成minion.pem(private key), minion.pub(public key)，然后将minion.pub发送给master&lt;/li&gt;
&lt;li&gt;master在接收到minion的public key后，通过salt-key命令accept minion public key，这样在master的/etc/salt/pki/master/minions下的将会存放以minion id命名的public key, 然后master就能对minion发送指令了&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;master上执行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 pillar]# salt-key -L
Accepted Keys:
Unaccepted Keys:
Rejected Keys:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接受所有的认证请求：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 pillar]# salt-key -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再次查看：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 pillar]# salt-key -L
Accepted Keys:
sk2
Unaccepted Keys:
Rejected Keys:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;salt-key&lt;/code&gt;更多说明：&lt;a href=&quot;http://docs.saltstack.com/ref/cli/salt-key.html&quot;&gt;http://docs.saltstack.com/ref/cli/salt-key.html&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;测试运行&lt;/h1&gt;

&lt;p&gt;在master上运行ping：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@sk1 pillar]# salt &amp;#39;*&amp;#39; test.ping
sk2:salt &amp;#39;*&amp;#39; test.ping
    True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;True表明测试成功。&lt;/p&gt;

&lt;h1&gt;安装halite&lt;/h1&gt;

&lt;h2&gt;下载代码&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git clone https://github.com/saltstack/halite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;生成index.html&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cd halite/halite
./genindex.py -C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;安装salt-api&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install salt-api
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;配置salt master文件&lt;/h2&gt;

&lt;p&gt;配置salt的master文件，添加：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;rest_cherrypy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;halite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;halite&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;halite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;halite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;external_auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;pam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;@runner&amp;#39;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;@wheel&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启master;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/init.d/salt-master restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;添加登陆用户&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;useradd admin
echo admin|passwd –stdin admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;启动 salt-api&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cd halite/halite
python2.6 server_bottle.py -d -C -l debug -s cherrypy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后打开&lt;code&gt;http://ip:8080/app&lt;/code&gt;，通过admin/admin登陆即可。&lt;/p&gt;
</description>
			<link>http://blog.javachen.com/saltstack/2013/11/11/install-saltstack-and-halite</link>
			<guid>http://blog.javachen.com/saltstack/2013/11/11/install-saltstack-and-halite</guid>
			<pubDate>Mon, 11 Nov 2013 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[在eclipse中调试运行hbase]]></title>
			<description>&lt;p&gt;这篇文章记录一下如何在eclipse中调试运行hbase。&lt;/p&gt;

&lt;h1&gt;下载并编译源代码&lt;/h1&gt;

&lt;p&gt;请参考&lt;a href=&quot;http://blog.javachen.com/hbase/2013/10/28/compile-hbase-source-code-and-apply-patches/&quot;&gt;编译hbase源代码并打补丁&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;修改配置文件&lt;/h1&gt;

&lt;p&gt;修改 &lt;code&gt;conf/hbase-site.xml&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;hbase.defaults.for.version&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;0.94.6-cdh4.4.0&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;hbase.rootdir&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;file:///home/june/tmp/data&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把conf文件夹加到Classpath中&lt;/p&gt;

&lt;h1&gt;运行HMaster&lt;/h1&gt;

&lt;p&gt;新建一个&lt;code&gt;Debug Configuration&lt;/code&gt;,  main class 是&lt;code&gt;org.apache.hadoop.hbase.master.HMaster&lt;/code&gt;,  参数填start&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;调试运行该类，运行成功之后日志如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;13/10/29 14:38:29 WARN zookeeper.RecoverableZooKeeper: Node /hbase/table/.META. already deleted, and this is not a retry
13/10/29 14:38:29 INFO regionserver.HRegionServer: Received request to open region: .META.,,1.1028785192
13/10/29 14:38:29 INFO regionserver.HRegion: Setting up tabledescriptor config now ...
13/10/29 14:38:29 INFO regionserver.Store: time to purge deletes set to 0ms in store info
13/10/29 14:38:29 INFO regionserver.HRegion: Onlined .META.,,1.1028785192; next sequenceid=1
13/10/29 14:38:29 INFO regionserver.HRegionServer: Post open deploy tasks for region=.META.,,1.1028785192, daughter=false
13/10/29 14:38:29 INFO catalog.MetaEditor: Updated row .META.,,1.1028785192 with server=june-mint,47477,1383028701871
13/10/29 14:38:29 INFO regionserver.HRegionServer: Done with post open deploy task for region=.META.,,1.1028785192, daughter=false
13/10/29 14:38:29 INFO handler.OpenedRegionHandler: Handling OPENED event for .META.,,1.1028785192 from june-mint,47477,1383028701871; deleting unassigned node
13/10/29 14:38:29 INFO master.AssignmentManager: The master has opened the region .META.,,1.1028785192 that was online on june-mint,47477,1383028701871
13/10/29 14:38:29 INFO master.HMaster: .META. assigned=2, rit=false, location=june-mint,47477,1383028701871
13/10/29 14:38:29 INFO catalog.MetaMigrationRemovingHTD: Meta version=0; migrated=true
13/10/29 14:38:29 INFO catalog.MetaMigrationRemovingHTD: ROOT/Meta already up-to date with new HRI.
13/10/29 14:38:29 INFO master.AssignmentManager: Clean cluster startup. Assigning userregions
13/10/29 14:38:29 INFO master.HMaster: Registered HMaster MXBean
13/10/29 14:38:29 INFO master.HMaster: Master has completed initialization
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果想修改日志级别，请修改&lt;code&gt;conf/log4j.properties&lt;/code&gt;中级别为INFO:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;#Logging Threshold
log4j.threshold=INFO
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;运行HRegionServer&lt;/h1&gt;

&lt;p&gt;参考上面的方法，运行HRegionServer，这时候会出现如下日志：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;13/11/04 11:50:47 INFO util.VersionInfo: HBase 0.94.6-cdh4.4.0
13/11/04 11:50:47 INFO util.VersionInfo: Subversion git://june-mint/chan/workspace/hadoop/hbase -r 979969e1d0d95ce3b8c1d14593f55148da8bc98f
13/11/04 11:50:47 INFO util.VersionInfo: Compiled by june on Tue Oct 29 15:11:51 CST 2013
13/11/04 11:50:47 WARN regionserver.HRegionServerCommandLine: Not starting a distinct region server because hbase.cluster.distributed is false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是因为当&lt;code&gt;hbase.cluster.distributed=false&lt;/code&gt;时，hbase为本地模式，master和regionserver在同一个jvm启动，并且会启动一个最小化的zookeeper集群。请参看：&lt;code&gt;HMasterCommandLine.java&lt;/code&gt;的startMaster()方法。&lt;/p&gt;

&lt;p&gt;如果你把该值设为true，则hbase集群为分布式模式，这时候默认会连接&lt;code&gt;127.0.0.1：2181&lt;/code&gt;对应的zookeeper集群（该集群需要在master启动之前启动）。当然，你可以修改参数让hbase自己维护一个zookeeper集群。&lt;/p&gt;

&lt;h1&gt;调试hbase shell&lt;/h1&gt;

&lt;p&gt;新建一个&lt;code&gt;Debug Configuration&lt;/code&gt;,  main class 是&lt;code&gt;org.jruby.Main&lt;/code&gt;，在程序参数中添加&lt;code&gt;bin/hirb.rb&lt;/code&gt;,然后运行即可。&lt;/p&gt;

&lt;h1&gt;一些技巧&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;调试java代码的时候, byte[]的变量总是显示成数字,如果要显示对应的字符&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Window-&amp;gt;Preference-&amp;gt;Java-&amp;gt;Debug-&amp;gt;Primitive Display Options-&amp;gt;Check some of them
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;hbase源码中默认依赖的是hadoop 1.0.x版本，所以mavne依赖中会引入hadoop-core-1.0.4.jar，你可以修改pom.xml文件，将默认的profile修改为你需要的hadoop版本，如2.0版本的hadoop。这样做之后，当你看HMaster的源代码时，你会很方便的关联并浏览ToolRunner类中的源代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;默认的profile是hadoop-1.0，配置文件如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;  &amp;lt;!-- profile for building against Hadoop 1.0.x: This is the default. --&amp;gt;
    &amp;lt;profile&amp;gt;
      &amp;lt;id&amp;gt;hadoop-1.0&amp;lt;/id&amp;gt;
      &amp;lt;activation&amp;gt;
        &amp;lt;property&amp;gt;
          &amp;lt;name&amp;gt;!hadoop.profile&amp;lt;/name&amp;gt;
        &amp;lt;/property&amp;gt;

   &amp;lt;profile&amp;gt;
      &amp;lt;id&amp;gt;hadoop-2.0&amp;lt;/id&amp;gt;
      &amp;lt;activation&amp;gt;
        &amp;lt;property&amp;gt;
          &amp;lt;name&amp;gt;hadoop.profile&amp;lt;/name&amp;gt;
          &amp;lt;value&amp;gt;2.0&amp;lt;/value&amp;gt;
        &amp;lt;/property&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你可以将默认的profile改为hadoop-2.0,修改之后的配置文件如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;    &amp;lt;profile&amp;gt;
      &amp;lt;id&amp;gt;hadoop-1.0&amp;lt;/id&amp;gt;
      &amp;lt;activation&amp;gt;
        &amp;lt;property&amp;gt;
          &amp;lt;name&amp;gt;hadoop.profile&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;1.0&amp;lt;/value&amp;gt;
        &amp;lt;/property&amp;gt;

   &amp;lt;profile&amp;gt;
      &amp;lt;id&amp;gt;hadoop-2.0&amp;lt;/id&amp;gt;
      &amp;lt;activation&amp;gt;
        &amp;lt;property&amp;gt;
          &amp;lt;name&amp;gt;!hadoop.profile&amp;lt;/name&amp;gt;
        &amp;lt;/property&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<link>http://blog.javachen.com/hbase/2013/11/01/debug-hbase-in-eclipse</link>
			<guid>http://blog.javachen.com/hbase/2013/11/01/debug-hbase-in-eclipse</guid>
			<pubDate>Fri, 01 Nov 2013 00:00:00 +0800</pubDate>
		</item>

		<item>
			<title><![CDATA[编译hbase源代码并打补丁]]></title>
			<description>&lt;p&gt;写了一篇博客记录编译hbase源代码并打补丁的过程，如有不正确的，欢迎指出！&lt;/p&gt;

&lt;h1&gt;下载源代码&lt;/h1&gt;

&lt;p&gt;从&lt;a href=&quot;https://github.com/cloudera/hbase&quot;&gt;Cloudera github&lt;/a&gt;上下载最新分支源代码，例如：当前最新分支为cdh4-0.94.6_4.4.0&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git clone git@github.com:cloudera/hbase.git -b cdh4-0.94.6_4.4.0 cdh4-0.94.6_4.4.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;说明：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;-b 指定下载哪个分支&lt;/li&gt;
&lt;li&gt;最后一个参数指定下载下来的文件名称&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;添加snappy压缩支持&lt;/h1&gt;

&lt;h2&gt;编译snappy&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;svn checkout http://snappy.googlecode.com/svn/trunk/ snappy
cd snappy
sh autogen.sh
./configure 
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;编译hadoop-snappy&lt;/h2&gt;

&lt;p&gt;降低gcc版本到4.4:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo yum install gcc-4.4
rm /usr/bin/gcc
ln -s /usr/bin/gcc-4.4 /usr/bin/gcc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;建立libjvm软连接&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo ln -s /usr/java/latest/jre/lib/amd64/server/libjvm.so  /usr/local/lib/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;下载并编译hadoop-snappy&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;svn checkout http://hadoop-snappy.googlecode.com/svn/trunk/ hadoop-snappy
cd hadoop-snappy
make package -Dsnappy.prefix=/usr/local/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装jar包到本地仓库&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;mvn install:install-file -DgroupId=org.apache.hadoop -DartifactId=hadoop-snappy -Dversion=0.0.1-SNAPSHOT -Dpackaging=jar -Dfile=./target/hadoop-snappy-0.0.1-SNAPSHOT.jar
mvn install:install-file -DgroupId=org.apache.hadoop -DartifactId=hadoop-snappy -Dversion=0.0.1-SNAPSHOT -Dclassifier=Linux-amd64-64 -Dpackaging=tar -Dfile=./target/hadoop-snappy-0.0.1-SNAPSHOT-Linux-amd64-64.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;添加lzo压缩支持&lt;/h1&gt;

&lt;p&gt;暂不在此列出，请参考网上文章。&lt;/p&gt;

&lt;h1&gt;编译Protobuf&lt;/h1&gt;

&lt;p&gt;注意：目前只能装2.4.1版本的，装最新版本的可能会缺少文件。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget https://protobuf.googlecode.com/files/protobuf-2.4.1.zip
unzip protobuf-2.4.1.zip
cd protobuf-2.4.1
./configure
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试是否安装成功，如果成功你会看到：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$ protoc
Missing input file.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果安装失败，你可能会看到：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$ protoc
protoc: error while loading shared libraries: libprotobuf.so.7: cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;编译hbase&lt;/h1&gt;

&lt;p&gt;进入到cdh4-0.94.6_4.4.0 目录，然后运行mvn基本命令。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cd cdh4-0.94.6_4.4.0
mvn clean install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;忽略测试，请添加如下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;-DskipTests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加MAVEN运行时jvm大小，请在mvn前面添加如下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;MAVEN_OPTS=&amp;quot;-Xmx2g&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成javadoc和文档，请添加如下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;javadoc:aggregate site assembly:single
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成release加入security和native包，请添加如下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;-Prelease,security,native
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基于hadoop2.0进行编译，请添加如下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;-Dhadoop.profile=2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加hadoop-snappy支持，请添加如下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;-Prelease,hadoop-snappy -Dhadoop-snappy.version=0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你添加了一些java代码，在每个文件头没有添加license，则需要添加如下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;-Drat.numUnapprovedLicenses=200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;综上，完整命令如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;MAVEN_OPTS=&amp;quot;-Xmx2g&amp;quot; mvn clean install javadoc:aggregate site assembly:single -DskipTests -Prelease,security,native,hadoop-snappy -Drat.numUnapprovedLicenses=200 -Dhadoop.profile=2.0 -Dhadoop-snappy.version=0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;生成patch&lt;/h1&gt;

&lt;p&gt;修改代码之后，在提交代码之前，运行如下命令生成patch：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git diff &amp;gt;../XXXXX.patch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你已经将该动文件加入到提交缓存区，即执行了如下代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你可以使用如下代码打补丁：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git diff --staged &amp;gt;../XXXXX.patch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果在提交之后，想生成patch，执行如下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git format-patch -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;git format-patch&lt;/code&gt;的详细说明请参考：&lt;a href=&quot;http://devillived.net/forum/home.php?mod=space&amp;amp;uid=2&amp;amp;do=blog&amp;amp;id=211&quot;&gt;git patch操作&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;更多diff的命令如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git diff &amp;lt;file&amp;gt;   # 比较当前文件和暂存区文件差异
git diff
git diff &amp;lt;$id1&amp;gt; &amp;lt;$id2&amp;gt;    # 比较两次提交之间的差异
git diff &amp;lt;branch1&amp;gt;..&amp;lt;branch2&amp;gt;    # 在两个分支之间比较 
git diff --staged   # 比较暂存区和版本库差异
git diff --cached   # 比较暂存区和版本库差异
git diff --stat     # 仅仅比较统计信息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;打patch&lt;/h1&gt;

&lt;p&gt;打patch：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git apply ../XXXXX.patch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试patch是否打成功：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git apply --check  ../add-aggregate-in-hbase-shell.patch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果出现以下错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;june@javachen.com /chan/workspace/hadoop/hbase $ git apply ../XXXXX.patch
fatal: git apply: bad git-diff - expected /dev/null on line 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请安装dos2unix：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install dos2unix -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后，执行如下代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;dos2unix ../add-aggregate-in-hbase-shell.patch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后再尝试打补丁。&lt;/p&gt;

&lt;p&gt;注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;请注意，git apply 是一个事务性操作的命令，也就是说，要么所有补丁都打上去，要么全部放弃。&lt;/li&gt;
&lt;li&gt;对于传统的 diff 命令生成的补丁，则只能用 git apply 处理。对于 format-patch 制作的新式补丁，应当使用 git am 命令。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;升级版本&lt;/h1&gt;

&lt;p&gt;当你fork了&lt;a href=&quot;https://github.com/cloudera/hbase&quot;&gt;Cloudera github&lt;/a&gt;代码之后，cloudera会继续更新代码、发布新的分支，如何将其最新的分支下载到自己的hbase仓库呢？例如，你的仓库中hbase最新分支为&lt;code&gt;cdh4-0.94.6_4.3.0&lt;/code&gt;，而cdh最新分支为&lt;code&gt;cdh4-0.94.6_4.4.0&lt;/code&gt;，现在如何将cdh上的分支下载到自己的参考呢？&lt;/p&gt;

&lt;p&gt;查看远程服务器地址和仓库名称：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;june@javachen.com /chan/workspace/hadoop/hbase $ git remote -v
origin  git@github.com:javachen/hbase.git (fetch)
origin  git@github.com:javachen/hbase.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加远程仓库地址：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git remote add cdh git@github.com:cloudera/hbase.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再一次查看远程服务器地址和仓库名称：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;june@javachen.com /chan/workspace/hadoop/hbase $ git remote -v
cdh https://github.com/cloudera/hbase (fetch)
cdh https://github.com/cloudera/hbase (push)
origin  git@github.com:javachen/hbase.git (fetch)
origin  git@github.com:javachen/hbase.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;抓取远程仓库更新：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git fetch cdh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后，再执行下面命令查看远程分支：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git branch -r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下载cdh上的分支：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git checkout cdh/cdh4-0.94.6_4.4.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将其提交到自己的远程仓库：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git push origin cdh4-0.94.6_4.4.0:cdh4-0.94.6_4.4.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;排错&lt;/h1&gt;

&lt;p&gt;如果在启动hbase的服务过程中出现如下日志：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;2013-10-24 22:44:59,921 INFO org.apache.hadoop.hbase.util.VersionInfo: HBase Unknown
2013-10-24 22:44:59,921 INFO org.apache.hadoop.hbase.util.VersionInfo: Subversion Unknown -r Unknown
2013-10-24 22:44:59,921 INFO org.apache.hadoop.hbase.util.VersionInfo: Compiled by Unknown on Unknown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请查看src/saveVersion.sh文件的编码及换行符是否和你的操作系统一致。编码应该设置为UTF-8，如果你使用的是linux系统，则换行符应该为unix/linux换行符，不应该为window换行符。&lt;/p&gt;

&lt;h1&gt;参考文章&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&quot;http://robbinfan.com/blog/34/git-common-command&quot;&gt;Git常用命令备忘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&quot;http://devillived.net/forum/home.php?mod=space&amp;amp;uid=2&amp;amp;do=blog&amp;amp;id=211&quot;&gt;git patch操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a href=&quot;http://blog.tsnrose.com/blog/2012/04/18/git-fetch/&quot;&gt;Git Fetch拉取他人分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[4] &lt;a href=&quot;http://smilejay.com/2012/08/generate-a-patch-from-a-commit/&quot;&gt;git根据commit生成patch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
			<link>http://blog.javachen.com/hbase/2013/10/28/compile-hbase-source-code-and-apply-patches</link>
			<guid>http://blog.javachen.com/hbase/2013/10/28/compile-hbase-source-code-and-apply-patches</guid>
			<pubDate>Mon, 28 Oct 2013 00:00:00 +0800</pubDate>
		</item>

	</channel>
</rss>
