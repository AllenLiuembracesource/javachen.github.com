<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>JavaChen Blog</title>
 <link href="http://blog.javachen.com/" rel="self"/>
 <link href="http://blog.javachen.com"/>
 <updated>2014-02-22T17:28:31+08:00</updated>
 <id>http://blog.javachen.com</id>
 <author>
   <name>JavaChen</name>
 </author>

 
 <entry>
   <title><![CDATA[Confluence 5.4.2安装]]></title>
   <link href="http://blog.javachen.com/linux/2014/02/21/install-confluence5.4.2"/>
   <updated>2014-02-21T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/linux/2014/02/21/install-confluence5.4.2</id>
   <content type="html">&lt;p&gt;Confluence是Atlassian公司出品的团队协同与知识管理工具。 Confluence是一个专业的企业知识管理与协同软件，也可以用于构建企业wiki。通过它可以实现团队成员之间的协作和知识共享。&lt;/p&gt;

&lt;h1&gt;1、下载&lt;/h1&gt;

&lt;p&gt;下载指定版本Confluence&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;mkdir -p /data/confluence
cd /data/confluence
wget www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-5.4.2.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;2、安装&lt;/h1&gt;

&lt;p&gt;解压&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;tar -zxvf atlassian-confluence-5.4.2.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;进入目录&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cd atlassian-confluence-5.4.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置confluence安装目录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;vim confluence/WEB-INF/classes/confluence-init.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在属性文件中添加安装目录路径：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;###########################
# Note for Unix Users     #
###########################
# - For example:
confluence.home=/data/confluence/confluence-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建目录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;mkdir confluence-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建完成后，运行启动：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sh bin/start-confluence.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;访问ip+portnum，默认端口为8090，如果出现破解界面，以上步骤即为成功&lt;/p&gt;

&lt;h1&gt;3、启停服务&lt;/h1&gt;

&lt;p&gt;使用压缩包形式的Confluence无法直接使用服务启停，需要配合目录的sh文件&lt;/p&gt;

&lt;p&gt;启动服务：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sh bin/start-confluence.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;停止服务：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sh bin/stop-confluence.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;4、修改默认端口&lt;/h1&gt;

&lt;p&gt;配置文件位置：&lt;code&gt;atlassian-confluence-5.4.2/conf/server.xml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;打开文件，&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Connector className=&amp;quot;org.apache.coyote.tomcat4.CoyoteConnector&amp;quot; port=&amp;quot;8090&amp;quot; minProcessors=&amp;quot;5&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改port 为需要&lt;/p&gt;

&lt;h1&gt;5、更换默认的数据库&lt;/h1&gt;

&lt;p&gt;在完成之前的步骤后，数据库使用的是一个confluence默认的hsql数据库，此数据库缺陷较多，例如：不支持事务管理。因此需要将数据库迁移为指定的数据库类型。进入confluence-data目录，修改&lt;code&gt;confluence-cfg.xml&lt;/code&gt;文件中数据库相关的连接信息。&lt;/p&gt;

&lt;h1&gt;6、破解&lt;/h1&gt;

&lt;p&gt;参考资料：&lt;a href=&quot;http://582033.vicp.net/?p=1085&quot;&gt;http://582033.vicp.net/?p=1085&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[CDH 5 Beta 2 的新变化]]></title>
   <link href="http://blog.javachen.com/hadoop/2014/02/21/cdh5rn_whats_new_in_b2"/>
   <updated>2014-02-21T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/hadoop/2014/02/21/cdh5rn_whats_new_in_b2</id>
   <content type="html">&lt;p&gt;这是 CDH 5.0.0 Beta 2 (原文&lt;a href=&quot;http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH5-Release-Notes/cdh5rn_whats_new_in_b2.html&quot;&gt;地址&lt;/a&gt;)的初稿。鉴于 CDH 5 目前的发布版本是测试版，它不应用于生产环境中；它只是用来评估、测试的。对于生产环境，请使用 CDH 4,最近的文档在 &lt;a href=&quot;http://www.cloudera.com/content/support/en/documentation/cdh4-documentation/cdh4-documentation-v4-latest.html&quot;&gt;CDH Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Apache Crunch&lt;/h1&gt;

&lt;p&gt;Apache Crunch 项目开发了新的 Java API，简化了在 Apache Hadoop 之上的数据管道的创建过程。&lt;/p&gt;

&lt;p&gt;Crunch APIs 是以 FlumeJava 为蓝本开发的，FlumeJava 是 Google 用来在他们自己的 MapReduce 实现之上构建数据管道的工具库。&lt;/p&gt;

&lt;p&gt;更多信息和安装指南，见 &lt;a href=&quot;http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH5-Installation-Guide/cdh5ig_Crunch_install.html#xd_583c10bfdbd326ba--6eed2fb8-14349d04bee--7ed4&quot;&gt;Crunch Installation&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Apache DateFu&lt;/h1&gt;

&lt;p&gt;从 0.4 更新到 1.1.0(此更新不向后兼容)。&lt;/p&gt;

&lt;p&gt;新特性包含了 UDFS SHA, SimpleRandomSample, COALESCE, ReservoirSample, EmptyBagToNullFields 以及很多其他部分。&lt;/p&gt;

&lt;h1&gt;Apache Flume&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/FLUME-2294&quot;&gt;FLUME-2294&lt;/a&gt; - 添加了一个 支持 Kite dataset 的 sink&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/FLUME-2056&quot;&gt;FLUME-2056&lt;/a&gt; - Spooling Directory Source 现在只能向 event headers 中传入文件名(而不是文件的完整路径名)。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/FLUME-2155&quot;&gt;FLUME-2155&lt;/a&gt; - 在文件回放时对文件通道建立索引来提高性能，使它能更快地启动&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/FLUME-2217&quot;&gt;FLUME-2217&lt;/a&gt; - Syslog Source 可选择性地在消息体中保存所有的系统日志头部属性信息(syslog headers)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/FLUME-2052&quot;&gt;FLUME-2052&lt;/a&gt; - Spooling Directory Source 现在可以替换或忽略所有输入文件中不正常的(malformed)字符&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Apache HBase&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;支持在线修改表结构&lt;/li&gt;
&lt;li&gt;支持在线合并 Region&lt;/li&gt;
&lt;li&gt;命名空间:CDH 5 Beta 2 包含的命名空间特性可以使不同的管理员用户分别管理不同的表。所有被更新的表都会被放在 &amp;quot;hbase&amp;quot; 命名空间中。超级管理员可以创建新命名空间和表。对命名空间拥有权限的用户可以管理里面的表的权限&lt;/li&gt;
&lt;li&gt;已经有了几个针对 HBase 在 Master 或 RegionServer 出故障时的的平均恢复时间 的改进:

&lt;ul&gt;
&lt;li&gt;分布式日志分割(split)已经成熟，并且总是被启用的。原来的比较慢的分割机制现在已经没有了&lt;/li&gt;
&lt;li&gt;失败检测时间有了提升。若 RegionServer 或 Master 发生故障会很快触发补救措施，此时会发送新的通知。&lt;/li&gt;
&lt;li&gt;元数据表有一个专用的 WAL(write ahead log) ,此时如果 RegionServer 的元数据已经保存，它能使 region 更快地恢复&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Region Balancer 有了显著更新，兼顾了更多的负载特性。&lt;/li&gt;
&lt;li&gt;添加了 TableSnapshotInputFormat 和 TableSnapshotScanner 来扫描 HBase 表的客户端快照，而不是服务器上的,后者将引发一个 MapReduce 作业，前者只会对客户端快照文件做单一的扫描。它们也可用于拥有快照文件的离线 HBase，或直接用于导出的快照文件&lt;/li&gt;
&lt;li&gt;KeyValue API 已经废弃，取而代之的是 Cell 接口。更新到 HBase 0.96 的用户仍可以使用 KeyValue，但以后的更新可能会去掉这个类或它的部分功能。建议用户更新更新他们的应用来使用新的 Cell 接口。&lt;/li&gt;
&lt;li&gt;当前试验性的一些特性：

&lt;ul&gt;
&lt;li&gt;分布式日志回放：这个机制使 RegionServer 能更快地从失败中恢复，但它会导致一个特殊情况：它不能保证 ACID(原子性、一致性、隔离性、持久性) 要素Cloudera 现在不建议启用这个特性&lt;/li&gt;
&lt;li&gt;大缓存(Bucket cache): 这是个 off-heap 缓存机制，它使用额外的 RAM 和 块设备(如闪存盘等)来极大地增强了 BlockCache 提供的读取缓存的能力。Cloudera 现在不建议启用这个特性&lt;/li&gt;
&lt;li&gt;垂青节点(Favored nodes,客户端希望存储数据的节点):为了在发生故障后更好地恢复现场(preserve performance)，这个特性使 HBase 能更好地控制它的数据是从哪里写入HDFS的。目前它还不能很好地与 HBase Balancer 和 HDFS Balancer 交互，所以目前还不可用。Cloudera 现在不建议启用这个特性&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多细节见这个&lt;a href=&quot;https://blogs.apache.org/hbase/entry/hbase_0_96_0_released&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Apache HDFS&lt;/h1&gt;

&lt;h2&gt;新特性及改进：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;从 CDH 5 Beta 2 开始，你可以更新 HDFS 并启用 HA 特性，如果你使用集群存储(Quorum-based storage)(CDH 5 不支持 NFS 共享存储，唯一的方法是集群存储)。从 CDH 4 到 CDH 5 的更新说明见 &lt;a href=&quot;http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH5-Installation-Guide/cdh5ig_topic_6.html#topic_6&quot;&gt;Upgrading to CDH 5 from CDH 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-4949&quot;&gt;HDFS-4949&lt;/a&gt; - CDH 5 Beta 2 支持 &lt;a href=&quot;http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH5-Installation-Guide/cdh5ig_hdfs_caching.html#xd_583c10bfdbd326ba--6eed2fb8-14349d04bee--7e7d&quot;&gt;HDFS 的集中化缓存管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;从 CDH 5 Beta 2 开始，你可以配置一个 NFSv3 网关，它允许任何 NFSv3 兼容的客户端将 HDFS 挂载为一个客户端的本地文件系统。更多信息和说明，见 &lt;a href=&quot;http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH5-Installation-Guide/cdh5ig_NFSv3_gateway.html#xd_583c10bfdbd326ba--6eed2fb8-14349d04bee--7ef4&quot;&gt;配置 NFSv3 网关&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-5709&quot;&gt;HDFS-5709&lt;/a&gt; - 改进对名为 .snapshot 的目录和文件的更新&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;主要的Bug修复:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-5449&quot;&gt;HDFS-5449&lt;/a&gt;- 修股 WebHDFS 的不兼容问题&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-5671&quot;&gt;HDFS-5671&lt;/a&gt;- 修复 &lt;code&gt;DFSInputStream#getBlockReader&lt;/code&gt; 中的 socket 泄漏&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-5353&quot;&gt;HDFS-5353&lt;/a&gt;- 启用 &lt;code&gt;dfs.encrypt.data.transfer&lt;/code&gt; 导致 Short circuit reads 失败的问题&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-5438&quot;&gt;HDFS-5438&lt;/a&gt;- 处理文件块报告过程中的导致数据丢失的缺陷&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;改变的行为:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;从 CDH 5 Beta 2 开始，为了让 NameNode 在一个安全的集群中启动，应该在 &lt;code&gt;hdfs-site.xml&lt;/code&gt; 中设置 &lt;code&gt;dfs.web.authentication.kerberos.principal&lt;/code&gt;   属性。&lt;a href=&quot;http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH5-Security-Guide/cdh5sg_topic_3_7.html#topic_3_7_unique_2&quot;&gt;CDH 5 的安全指南&lt;/a&gt;已经包含了这点。Cloudera Manager 管理的集群则无需显式定义这个属性。&lt;/li&gt;
&lt;li&gt;HDFS-5037 - 启动 NameNode 的操作应该触发它进行日志滚动。当碰到 NameNode 处在安全模式时，客户端会在配置的时间范围内重试。&lt;/li&gt;
&lt;li&gt;mkdir 命令的默认行为有了变化。从 CDH 5 Beta 2 开始，如果父目录不存在就必须使用 &lt;code&gt;-p&lt;/code&gt; 选项，否则操作将会失败。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Apache Hive&lt;/h1&gt;

&lt;h2&gt;新特性:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;改进的 JDBC 规范包括：

&lt;ul&gt;
&lt;li&gt;改进 &lt;code&gt;getDatabaseMajorVersion()&lt;/code&gt;, &lt;code&gt;getDatabaseMinorVersion()&lt;/code&gt; APIs (&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-3181&quot;&gt;HIVE-3181&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;添加了对新的数据类型的支持:Char (&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5209&quot;&gt;HIVE-5683&lt;/a&gt;), Decimal (&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5355&quot;&gt;HIVE-5355&lt;/a&gt;) and Varchar (&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5209&quot;&gt;HIVE-5209&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;现在可以在 HiveServer2 连接地址(connection URL) 中为会话指定要连接的数据库&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Hive Server 和 Clients 的加密通信。 包括 HiveServer2 对 SSL 加密的支持(非 Kerberos 连接).(&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5351&quot;&gt;HIVE-5351&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;CDH 5 Beta 2 包含了一个可用的本地 Parquet SerDe。用户不需要依赖任何外部包即可直接创建一个 Parquet 格式的表。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;改变的行为:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-4256&quot;&gt;HIVE-4256&lt;/a&gt;- 启用 Sentry 的情况下，与 HiveServer2 建立连接的工作包含了 use &lt;database&gt; 这个命令 的执行。因此，没有权限访问相应数据库的用户不允许连接到 HiveServer2&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Hue&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Hue 版本更新到 3.5.0.&lt;/li&gt;
&lt;li&gt;添加了一个新的 &lt;a href=&quot;http://gethue.tumblr.com/post/71963991256/a-new-spark-web-ui-spark-app&quot;&gt;Spark Editor&lt;/a&gt; 应用。&lt;/li&gt;
&lt;li&gt;Impala 和 Hive Editor 现在都是单页应用(one-page apps). 编辑器、进度、Table 列表和结果都在同一个页面。&lt;/li&gt;
&lt;li&gt;用图展示 Impala 和 Hive Editor 的结果数据&lt;/li&gt;
&lt;li&gt;Oozie SLA 的 Editor 和 Dashboard，定时任务，认证信息&lt;/li&gt;
&lt;li&gt;Sqoop2 应用支持数据库和表名/属性的自动补全&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gethue.tumblr.com/post/66661074125/dbquery-app-mysql-postgresql-oracle-and-sqlite-query&quot;&gt;DBQuery App&lt;/a&gt;: MySQL 和 PostgreSQL Query Editors.&lt;/li&gt;
&lt;li&gt;新的搜索特性：&lt;a href=&quot;http://gethue.tumblr.com/post/66351828212/new-search-feature-graphical-facets&quot;&gt;支持图形化的套件&lt;/a&gt;(Graphical facets)&lt;/li&gt;
&lt;li&gt;集成外部 Web 应用，应用可以是基于任何语言的。更多信息见 &lt;a href=&quot;http://gethue.tumblr.com/post/66367939672/integrate-external-web-applications-in-any-language&quot;&gt;blog post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;创建 Hive 表，加载 quoted CSV data。&lt;a href=&quot;http://gethue.tumblr.com/post/68282571607/hadoop-tutorial-create-hive-tables-with-headers-and&quot;&gt;参考手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;从 HDFS 直接提交任意 Oozie 作业。&lt;a href=&quot;http://gethue.tumblr.com/post/68781982681/hadoop-tutorial-submit-any-oozie-jobs-directly-from&quot;&gt;参考手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;新的 &lt;a href=&quot;http://gethue.tumblr.com/post/62273866476/sso-with-hue-new-saml-backend&quot;&gt;SAML backend&lt;/a&gt; 支持使用 Hue 单点登录&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Apache MapReduce (MRv1 and YARN)&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;公平调度器支持自动将应用存入队列的高级配置&lt;/li&gt;
&lt;li&gt;MapReduce 支持在 uber 模式和本地 job runner 中运行多个 reducer&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Apache Oozie&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Oozie now supports cron-style scheduling capability.&lt;/li&gt;
&lt;li&gt;Oozie 现在支持安全的 HA(High Availability with security)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Apache Pig&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;重写了 AvroStorage 以提升性能，并且从 piggybank 移到了 core Pig.&lt;/li&gt;
&lt;li&gt;添加了 ASSERT, IN, 和 CASE 操作&lt;/li&gt;
&lt;li&gt;添加了 ParquetStorage 来与 Parquet 集成&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Apache Spark (孵化中)&lt;/h1&gt;

&lt;p&gt;Spark 是一个快速，通用用于大规模数据处理的引擎。安装和配置指南见 &lt;a href=&quot;http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH5-Installation-Guide/cdh5ig_Spark_install.html#xd_583c10bfdbd326ba--6eed2fb8-14349d04bee--7eff&quot;&gt;Spark Installation&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Apache Sqoop2&lt;/h1&gt;

&lt;p&gt;版本从 1.99.2 更新到 1.99.3.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[Backbone中的模型]]></title>
   <link href="http://blog.javachen.com/javascript/2014/02/16/backbone-model"/>
   <updated>2014-02-16T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/javascript/2014/02/16/backbone-model</id>
   <content type="html">&lt;h1&gt;创建model&lt;/h1&gt;

&lt;p&gt;模型是所有Javascript应用程序的核心，包括交互数据及相关的大量逻辑： 转换、验证、计算属性和访问控制。你可以用特定的方法扩展&lt;code&gt;Backbone.Model&lt;/code&gt;，模型也提供了一组基本的管理变化的功能。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Welcome to this world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;new一个model的实例后就会触发initialize()函数。&lt;/p&gt;

&lt;h1&gt;设置属性&lt;/h1&gt;

&lt;p&gt;现在我们想设置一些属性，有两种方式，可以在创建model实例时进行传参，也可以在实例生成后通过&lt;code&gt;model.set(obj)&lt;/code&gt;来进行设置。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Welcome to this world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thomas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// or we can set afterwards, these operations are equivelent&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thomas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;获取属性&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Welcome to this world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thomas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Ryan&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 67&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;quot;Thomas&amp;quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;child&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;#39;Ryan&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;设置model默认属性&lt;/h1&gt;

&lt;p&gt;有的时候你可能会想让model有默认属性值，只要在进行model声明的时候设置个&lt;code&gt;defaults&lt;/code&gt;就行了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Fetus&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Welcome to this world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thomas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Ryan&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 67&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;quot;Thomas&amp;quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;child&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;#39;Ryan&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;监听model的属性改变&lt;/h1&gt;

&lt;p&gt;我们可以通过&lt;code&gt;model.bind(event,callback)&lt;/code&gt;方法来绑定change事件来监听属性改变。下面的这个例子就是在initialize方法中绑定了一个name属性改变的事件监听。
如果person的name属性改变了，就会弹出个对话框显示新值。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Fetus&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Welcome to this world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;change:name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;#39;Stewie Griffin&amp;#39;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Changed my name to &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thomas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Stewie Griffin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// This triggers a change and will alert()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;和服务端交互&lt;/h1&gt;

&lt;p&gt;服务端实现一个RESTful的url例如/user，可以允许我们通过他与后台交互。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;urlRoot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;model.urlRoot&lt;/code&gt;:如果使用的集合外部的模型，通过指定 urlRoot 来设置生成基于模型 id 的 URLs 的默认 url 函数。 &amp;quot;/[urlRoot]/id&amp;quot;&lt;/p&gt;

&lt;h1&gt;创建一个新model&lt;/h1&gt;

&lt;p&gt;如果id为null，则会提交一个POST请求到/user。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;urlRoot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Usermodel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Notice that we haven&amp;#39;t set an `id`&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userDetails&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Thomas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;thomasalwyndavis@gmail.com&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Because we have not set a `id` the server will call&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// POST /user with a payload of {name:&amp;#39;Thomas&amp;#39;, email: &amp;#39;thomasalwyndavis@gmail.com&amp;#39;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// The server should save the data and return a response containing the new `id`&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userDetails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;model.save([attributes], [options])&lt;/code&gt;: 通过委托&lt;code&gt;Backbone.sync&lt;/code&gt;保存模型到数据库（或可替代的持久层）。 attributes 散列表 (在 set) 应当包含想要改变的属性，不涉及的键不会被修改。 如果模型含有&lt;code&gt;validate&lt;/code&gt;方法，并且验证失败，模型不会保存。 如果模型&lt;code&gt;isNew&lt;/code&gt;, 保存将采用 &amp;quot;create&amp;quot; (HTTP POST) 方法, 如果模型已经在服务器存在，保存将采用 &amp;quot;update&amp;quot; (HTTP PUT) 方法.&lt;/p&gt;

&lt;h1&gt;获取一个model&lt;/h1&gt;

&lt;p&gt;初始化一个model实例并设置其id属性，并调用fetch方法，这样会请求&lt;code&gt;urlRoot + &amp;#39;/id&amp;#39;&lt;/code&gt;地址到后台。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Here we have set the `id` of the model&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Usermodel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The fetch below will perform GET /user/1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// The server should return the id, name and email from the database&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;model.fetch([options])&lt;/code&gt;: 从服务器重置模型状态。这对模型尚未填充数据，或者服务器端已有最新状态的情况很有用处。 如果服务器端状态与当前属性不同，则触发&lt;code&gt;change&lt;/code&gt;事件。 选项的散列表参数接受&lt;code&gt;success&lt;/code&gt;和&lt;code&gt;error&lt;/code&gt;回调函数， 回调函数中可以传入&lt;code&gt;(model,response)&lt;/code&gt;作为参数。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 每隔 10 秒从服务器拉取数据以保持模型是最新的&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;更新一个model&lt;/h1&gt;

&lt;p&gt;当保存的model对象的id不为空时，则会提交一个PUT请求到urlRoot。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Here we have set the `id` of the model&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Usermodel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Thomas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;thomasalwyndavis@gmail.com&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Let&amp;#39;s change the name and update the server&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Because there is `id` present, Backbone.js will fire&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// PUT /user/1 with a payload of `{name: &amp;#39;Davis&amp;#39;, email: &amp;#39;thomasalwyndavis@gmail.com&amp;#39;}`&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Davis&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;删除一个model&lt;/h1&gt;

&lt;p&gt;调用model的destroy方法时，则会提交请求到urlRoot+&amp;quot;/id&amp;quot;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Here we have set the `id` of the model&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Usermodel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Thomas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;thomasalwyndavis@gmail.com&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Because there is `id` present, Backbone.js will fire&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// DELETE /user/1 &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Destroyed&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;model.destroy([options])&lt;/code&gt;:通过委托&lt;code&gt;HTTP DELETE&lt;/code&gt;请求到&lt;code&gt;Backbone.sync&lt;/code&gt;销毁服务器上的模型. 接受&lt;code&gt;success&lt;/code&gt;和&lt;code&gt;error&lt;/code&gt;回调函数作为选项散列表参数。将在模型上触发&lt;code&gt;destroy&lt;/code&gt;事件，该事件可以通过任意包含它的集合向上冒泡。&lt;/p&gt;

&lt;h1&gt;其他方法&lt;/h1&gt;

&lt;p&gt;model还有一些其他的方法，可以参考api：&lt;a href=&quot;http://www.csser.com/tools/backbone/backbone.js.html#manual/Model&quot;&gt;Backbone.js API中文文档&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thomas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// { name: &amp;quot;Thomas&amp;quot;, age: 67}&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* This simply returns a copy of the current attributes. */&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* The line above gives a direct reference to the attributes and you should be careful when playing with it.   Best practise would suggest that you use .set() to edit attributes of a model to take advantage of backbone listeners. */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;参考文章&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://backbonetutorials.com/what-is-a-model/&quot;&gt;what-is-a-model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.csser.com/tools/backbone/backbone.js.html&quot;&gt;Backbone.js API中文文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[在CentOs6系统上安装Ganglia]]></title>
   <link href="http://blog.javachen.com/linux/2014/01/25/how-to-install-ganglia-on-centos6"/>
   <updated>2014-01-25T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/linux/2014/01/25/how-to-install-ganglia-on-centos6</id>
   <content type="html">&lt;h1&gt;配置yum源&lt;/h1&gt;

&lt;p&gt;首先配置好CentOs系统的yum源，然后需要包含有ganglia的yum源。&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;/etc/yum.repos.d&lt;/code&gt;下创建&lt;code&gt;ganglia.repo&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[ganglia]
name= ganglia
baseurl = http://vuksan.com/centos/RPMS/
enabled = 1
gpgcheck = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了方便离线使用，你可以下载该yum源内容：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cd /opt
reposync -r ganglia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;然后在&lt;code&gt;/opt/ganglia&lt;/code&gt;下执行如下的命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;createrepo .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样你就可以将&lt;code&gt;ganglia.repo&lt;/code&gt;修改为本地yum的方式。&lt;/p&gt;

&lt;h1&gt;管理机上安装gmetad&lt;/h1&gt;

&lt;p&gt;执行如下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum -y install ganglia-gmetad
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装时遇到如下的错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Error: Package: rrdtool-1.4.5-1.x86_64 (ganglia)
          Requires: dejavu-lgc-fonts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;rrdtool依赖&lt;code&gt;dejavu-lgc-fonts&lt;/code&gt;，但是系统源并不包含这个，你可以从网上下载，然后安装：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;rpm -Uvh http://mirror.steadfast.net/centos/5/os/x86_64//CentOS/dejavu-lgc-fonts-2.10-1.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;管理机上安装ganglia-web&lt;/h1&gt;

&lt;p&gt;先安装apache和php等依赖：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install php* httpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后下载ganglia-web:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;wget http://sourceforge.net/projects/ganglia/files/ganglia-web/3.5.12/ganglia-web-3.5.12.tar.gz/download

tar zxvf ganglia-web-3.5.12.tar.gz
cd ganglia-web-3.5.12
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将ganglia-web拷贝或者添加软链接到apache的目录下去，以下是拷贝：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;mkdir /var/www/html/ganglia
cp -a  /usr/share/ganglia/   /var/www/html/ganglia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在httpd的conf.d目录下添加ganglia.conf，命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;vi /etc/httpd/conf.d/ganglia.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;内容如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Location /ganglia&amp;gt;
    Order deny,allow
    Deny from all
    ALLOW from all
#    Allow from 127.0.0.1
#    Allow from ::1
#    Allow from .example.com
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;客户端机器上安装gmond&lt;/h1&gt;

&lt;p&gt;执行如下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install gmond
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;启动服务&lt;/h1&gt;

&lt;p&gt;在管理机上启动gmetad&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/init.d/gmetad start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在客户端机器上启动gmond&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/init.d/gmond start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在管理机上启动httpd&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/init.d/httpd start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后通过web界面（&lt;code&gt;http://manager-ip/ganglia&lt;/code&gt;）访问ganglia-web&lt;/p&gt;

&lt;h1&gt;修改配置文件&lt;/h1&gt;

&lt;h1&gt;监控hadoop&lt;/h1&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[在RHEL系统上安装Nagios]]></title>
   <link href="http://blog.javachen.com/linux/2014/01/24/how-to-install-nagios-on-rhel6"/>
   <updated>2014-01-24T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/linux/2014/01/24/how-to-install-nagios-on-rhel6</id>
   <content type="html">&lt;h1&gt;在管理机上安装rpm包&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
yum -y install nagios nagios-plugins-all nagios-plugins-nrpe nrpe php httpd
chkconfig httpd on &amp;amp;&amp;amp; chkconfig nagios on
service httpd start &amp;amp;&amp;amp; service nagios start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;设置管理界面密码&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;htpasswd -c /etc/nagios/passwd nagiosadmin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;密码和用户名保持一致（都设置为nagiosadmin），否则你需要修改&lt;code&gt;/etc/nagios/cgi.cfg&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;访问Nagios&lt;/h1&gt;

&lt;p&gt;打开&lt;code&gt;http://ip/nagios&lt;/code&gt;，输入用户名和密码即可访问&lt;/p&gt;

&lt;h1&gt;在客户端上安装NRPE&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
yum -y install nagios nagios-plugins-all nrpe
chkconfig nrpe on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改配置&lt;code&gt;/etc/nagios/nrpe.cfg&lt;/code&gt;，例如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;log_facility=daemon
pid_file=/var/run/nrpe/nrpe.pid
server_port=5666
nrpe_user=nrpe
nrpe_group=nrpe
allowed_hosts=198.211.117.251
dont_blame_nrpe=1
debug=0
command_timeout=60
connection_timeout=300
include_dir=/etc/nrpe.d/
command[check_users]=/usr/lib64/nagios/plugins/check_users -w 5 -c 10
command[check_load]=/usr/lib64/nagios/plugins/check_load -w 15,10,5 -c 30,25,20
command[check_disk]=/usr/lib64/nagios/plugins/check_disk -w 20% -c 10% -p /dev/vda
command[check_zombie_procs]=/usr/lib64/nagios/plugins/check_procs -w 5 -c 10 -s Z
command[check_total_procs]=/usr/lib64/nagios/plugins/check_procs -w 150 -c 200
command[check_procs]=/usr/lib64/nagios/plugins/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请注意修改&lt;code&gt;allowed_hosts&lt;/code&gt;值为你的nagios监控机ip&lt;/p&gt;

&lt;p&gt;设置iptables：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;iptables -N NRPE
iptables -I INPUT -s 0/0 -p tcp --dport 5666 -j NRPE
iptables -I NRPE -s 198.211.117.251 -j ACCEPT
iptables -A NRPE -s 0/0 -j DROP
/etc/init.d/iptables save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者，关闭iptables：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/init.d/iptables stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动NRPE：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;service nrpe start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;在管理机上添加配置文件&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;echo &amp;quot;cfg_dir=/etc/nagios/servers&amp;quot; &amp;gt;&amp;gt; /etc/nagios/nagios.cfg
cd /etc/nagios/servers
touch hadoop.tk.cfg
touch hbase.tk.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后修改每一个配置文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;vim /etc/nagios/servers/hadoop.tk.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加内容如下，你也可以稍作修改：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;define host {
        use                     linux-server
        host_name               cloudmail.tk
        alias                   cloudmail.tk
        address                 192.168.56.122
        }

define service {
        use                             generic-service
        host_name                       cloudmail.tk
        service_description             PING
        check_command                   check_ping!100.0,20%!500.0,60%
        }

define service {
        use                             generic-service
        host_name                       cloudmail.tk
        service_description             SSH
        check_command                   check_ssh
        notifications_enabled           0
        }

define service {
        use                             generic-service
        host_name                       cloudmail.tk
        service_description             Current Load
        check_command                   check_local_load!5.0,4.0,3.0!10.0,6.0,4.0
        }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启nagios：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chown -R nagios. /etc/nagios
service nagios restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title><![CDATA[All Things OpenTSDB]]></title>
   <link href="http://blog.javachen.com/linux/2014/01/22/all-things-opentsdb"/>
   <updated>2014-01-22T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/linux/2014/01/22/all-things-opentsdb</id>
   <content type="html">&lt;h1&gt;OpenTSDB介绍&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://opentsdb.net/index.html&quot;&gt;OpenTSDB&lt;/a&gt;用hbase存储所有的时序（无须采样）来构建一个分布式、可伸缩的时间序列数据库。它支持秒级数据采集所有metrics，支持永久存储，可以做容量规划，并很容易的接入到现有的报警系统里。OpenTSDB可以从大规模的集群（包括集群中的网络设备、操作系统、应用程序）中获取相应的metrics并进行存储、索引以及服务，从而使得这些数据更容易让人理解，如web化、图形化等。&lt;/p&gt;

&lt;p&gt;对于运维工程师而言，OpenTSDB可以获取基础设施和服务的实时状态信息，展示集群的各种软硬件错误，性能变化以及性能瓶颈。对于管理者而言，OpenTSDB可以衡量系统的SLA，理解复杂系统间的相互作用，展示资源消耗情况。集群的整体作业情况，可以用以辅助预算和集群资源协调。对于开发者而言，OpenTSDB可以展示集群的主要性能瓶颈，经常出现的错误，从而可以着力重点解决重要问题。&lt;/p&gt;

&lt;p&gt;OpenTSDB使用LGPLv2.1+开源协议。&lt;/p&gt;

&lt;h1&gt;安装OpenTSDB&lt;/h1&gt;

&lt;h2&gt;依赖&lt;/h2&gt;

&lt;p&gt;OpenTSDB依赖jdk和&lt;a href=&quot;http://www.gnuplot.info/&quot;&gt;Gnuplot&lt;/a&gt;，Gnuplot需要提前安装，版本要求为最小4.2,最大4.4,执行以下命令安装即可：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;yum install gnuplot autoconf
apt-get install gnuplot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OpenTSDB是用java编写的，但是项目构建不是用的java的方式而是使用的C、C++程序员构建项目的方式。运行时依赖：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JDK 1.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/OpenTSDB/asynchbase&quot;&gt;asynchbase&lt;/a&gt; 1.3.0 (BSD)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/guava-libraries/&quot;&gt;Guava&lt;/a&gt; 12.0 (ASLv2)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://logback.qos.ch/&quot;&gt;logback&lt;/a&gt; 1.0 (LGPLv2.1 / EPL)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jboss.org/netty&quot;&gt;Netty&lt;/a&gt; 3.4 (ASLv2)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://slf4j.org/&quot;&gt;SLF4J&lt;/a&gt; 1.6 (MIT) with Log4J and JCL adapters&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/OpenTSDB/async&quot;&gt;suasync&lt;/a&gt; 1.2 (BSD)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hadoop.apache.org/zookeeper/&quot;&gt;ZooKeeper&lt;/a&gt; 3.3 (ASLv2)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可选的编译时依赖：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gwt.google.com/&quot;&gt;GWT&lt;/a&gt; 2.4 (ASLv2)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可选的单元测试依赖：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.javassist.org/&quot;&gt;Javassist&lt;/a&gt; 3.15 (MPL / LGPL)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.junit.org/&quot;&gt;JUnit&lt;/a&gt; 4.10 (CPL)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mockito.org/&quot;&gt;Mockito&lt;/a&gt; 1.9 (MIT)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/powermock/&quot;&gt;PowerMock&lt;/a&gt; 1.4 (ASLv2)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;下载并编译源代码&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git clone git://github.com/OpenTSDB/opentsdb.git
cd opentsdb
./build.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;安装&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;首先安装一个单节点或者多节点集群的hbase环境，hbase版本要求为0.94&lt;/li&gt;
&lt;li&gt;设置环境变量并创建opentsdb使用的表，需要设置的环境变量为&lt;code&gt;COMPRESSION&lt;/code&gt;和&lt;code&gt;HBASE_HOME&lt;/code&gt;，前者设置是否启用压缩，或者设置hbase home目录。如果使用压缩，则还需要安装lzo&lt;/li&gt;
&lt;li&gt;执行建表语句&lt;code&gt;src/create_table.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动TSD&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;tsdtmp=${TMPDIR-&amp;#39;/tmp&amp;#39;}/tsd    # For best performance, make sure
mkdir -p &amp;quot;$tsdtmp&amp;quot;             # your temporary directory uses tmpfs
./build/tsdb tsd --port=4242 --staticroot=build/staticroot --cachedir=&amp;quot;$tsdtmp&amp;quot; --auto-metric
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你使用的是hbase集群，则你还需要设置&lt;code&gt;--zkquorum&lt;/code&gt;，&lt;code&gt;--cachedir&lt;/code&gt;对应的目录会产生一些临时文件，你可以设置cron定时任务进行删除。添加&lt;code&gt;--auto-metric&lt;/code&gt;，则当新的数据被搜集时自动创建指标。
5. 启动成功之后，你可以通过&lt;a href=&quot;http://127.0.0.1:4242&quot;&gt;127.0.0.1:4242&lt;/a&gt;进行访问。&lt;/p&gt;

&lt;p&gt;从源代码安装gnuplot、autoconf、opentsdb以及tcollector，可以参考：&lt;a href=&quot;http://www.adintellig.com/blog/14&quot;&gt;OpenTSDB &amp;amp; tcollector 安装部署（Installation and Deployment）&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;使用OpenTSDB&lt;/h1&gt;

&lt;h2&gt;命令说明&lt;/h2&gt;

&lt;p&gt;tsdb支持以下参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@cdh1 build]# ./tsdb 
usage: tsdb &amp;lt;command&amp;gt; [args]
Valid commands: fsck, import, mkmetric, query, tsd, scan, uid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;创建指标&lt;/h2&gt;

&lt;p&gt;通过以下命令创建指标：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;./tsdb mkmetric mysql.bytes_received mysql.bytes_sent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行上述命令的结果如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;metrics mysql.bytes_received: [0, 0, -93]
metrics mysql.bytes_sent: [0, 0, -92]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OpenTSDB目前支持的最大指标数为：2的24次方 = 16777216，每个指标都会对应一个3 bytes的 UID。&lt;/p&gt;

&lt;h2&gt;Schema&lt;/h2&gt;

&lt;p&gt;OpenTSDB的tsdb启动之后，会监控指定的socket端口（默认为4242），接收到监控数据，包括指标、时间戳、数据、tag标签，tag标签包括tag名称ID和tag值ID。例如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;myservice.latency.avg 1292148123 42 reqtype=foo host=web42
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于指标myservice.latency.avg的ID为：[0, 0, -69],reqtype标签名称的ID为：[0, 0, 1], foo标签值的ID为：[0, 1, 11], 标签名称的ID为：[0, 0, 2] web42标签值的ID为：[0, -7, 42]，他们组成rowkey：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[0, 0, -69, 77, 4, -99, 32, 0, 0, 1, 0, 1, 11, 0, 0, 2, 0, -7, 42]
 `-------&amp;#39;  `------------&amp;#39;  `-----&amp;#39;  `------&amp;#39;  `-----&amp;#39;  `-------&amp;#39;
 metric ID  base timestamp  name ID  value ID  name ID  value ID
                            `---------------&amp;#39;  `---------------&amp;#39;
                                first tag         second tag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;row表示格式为： 每个数字对应1 byte&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[0, 0, -69] metric ID&lt;/li&gt;
&lt;li&gt;[77, 4, -99, 32] base timestamp = 1292148000. timestamps in the row key are rounded down to a 60 minute boundary。也就是说对于同一个小时的metric + tags相同的数据都会存放在一个row下面&lt;/li&gt;
&lt;li&gt;[0, 0, 1] &amp;quot;reqtype&amp;quot; index&lt;/li&gt;
&lt;li&gt;[0, 1, 11] &amp;quot;foo&amp;quot; index&lt;/li&gt;
&lt;li&gt;[0, 0, 2] &amp;quot;host&amp;quot; index&lt;/li&gt;
&lt;li&gt;[0, -7, 42] &amp;quot;web42&amp;quot; index&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NOTE（dirlt）：可以看到，对于metric + tags相同的数据都会连续存放，且metic相同的数据也会连续存放，这样对于scan以及做aggregation都非常有帮助&lt;/p&gt;

&lt;p&gt;column qualifier占用2 bytes，表示格式为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;12 bits delta in seconds.(相对row表示的小时的delta, 最多2^ 12 = 4096 &amp;gt; 3600因此没有问题）&lt;/li&gt;
&lt;li&gt;4 bits&lt;/li&gt;
&lt;li&gt;1 bit (long or double)&lt;/li&gt;
&lt;li&gt;3 bits (reserved)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;value使用8bytes存储，既可以存储long,也可以存储double。&lt;/p&gt;

&lt;h2&gt;查询&lt;/h2&gt;

&lt;h2&gt;HTTP API&lt;/h2&gt;

&lt;h1&gt;谁在用OpenTSDB&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.stumbleupon.com/&quot;&gt;StumbleUpon&lt;/a&gt; StumbleUpon is the easiest way to find cool new websites, videos, photos and images from across the Web&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.box.com/&quot;&gt;box&lt;/a&gt; Box simplifies online file storage, replaces FTP and connects teams in online workspaces.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tumblr.com/&quot;&gt;tumblr&lt;/a&gt; 一个轻量级博客，用户可以跟进其他的会员并在自己的页面上看到跟进会员发表的文章，还可以转发他人在Tumblr上的文章&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;参考资料&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;http://luoshi0801.iteye.com/blog/1938835&lt;/li&gt;
&lt;li&gt;http://blog.csdn.net/bingjie1217/article/category/1751285&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.binospace.com/index.php/opentsdb-design-road/&quot;&gt;OpenTSDB的设计之道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dirlt.com/opentsdb.html&quot;&gt;opentsdb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[All Things Jekyll]]></title>
   <link href="http://blog.javachen.com/linux/2014/01/21/all-things-about-jekyll"/>
   <updated>2014-01-21T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/linux/2014/01/21/all-things-about-jekyll</id>
   <content type="html">&lt;p&gt;Jekyll是一个简洁的、特别针对博客平台的静态网站生成器。它使用一个模板目录作为网站布局的基础框架，并在其上运行Textile、Markdown或Liquid标记语言的转换器，最终生成一个完整的静态Web站点，可以被放置在Apache或者你喜欢的其他任何Web服务器上。它同时也是GitHub Pages、一个由GitHub提供的用于托管项目主页或博客的服务，在后台所运行的引擎。&lt;/p&gt;

&lt;h1&gt;1. 安装&lt;/h1&gt;

&lt;p&gt;Jekyll使用动态脚本语言Ruby写成。请首先下载并安装Ruby，目前需要的ruby版本为&lt;code&gt;1.9.1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在使用Jekyll之前，你可能想要对Ruby语言有一些初步了解（非必需）。&lt;/p&gt;

&lt;p&gt;安装Jekyll的最好方式是通过&lt;code&gt;RubyGems&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jekyll依赖以下的gems模块：liquid、fast-stemmer、classifier、directory_watcher、syntax、maruku、kramdown、posix-spawn和albino。它们会被&lt;code&gt;gem install&lt;/code&gt;命令自动安装。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1&gt;2. 模板引擎&lt;/h1&gt;

&lt;h2&gt;2.1 RDiscount&lt;/h2&gt;

&lt;p&gt;如果你想用 RDiscount 取代 Maruku 作为你的Markdown标记语言转换引擎，只需确认安装：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;gem install rdiscount
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;并通过以下命令行参数执行Jekyll：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;jekyll --rdiscount
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者也可以在你站点下的 &lt;code&gt;_config.yml&lt;/code&gt; 文件中加入以下配置，以便以后每次执行时不必再指定命令行参数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;markdown: rdiscount
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2.2 RedCloth&lt;/h2&gt;

&lt;p&gt;若要使用Textile标记语言，需要安装相应的转换引擎&lt;a href=&quot;http://redcloth.org/&quot;&gt;RedCloth&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;gem install RedCloth
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你可能会用到的标记语言和模板引擎：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Textile_(markup_language&quot;&gt;Textile&lt;/a&gt; 可读性好的轻量级标记语言，可以被转换成XHTML格式。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.textism.com/tools/textile/&quot;&gt;Textile Home Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://redcloth.org/hobix.com/textile/&quot;&gt;A Textile Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://redcloth.org/&quot;&gt;RedCloth&lt;/a&gt; Ruby的Textile实现引擎。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt; 另一种Jekyll所支持的轻量级标记语言。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown Home Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://deveiate.org/projects/BlueCloth&quot;&gt;BlueCloth&lt;/a&gt; Ruby的Markdown实现引擎。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://maruku.rubyforge.org/&quot;&gt;Maruku&lt;/a&gt; Ruby的另一个Markdown实现引擎，效率较高。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/rtomayko/rdiscount/&quot;&gt;RDiscount&lt;/a&gt; Ruby的另一个Markdown实现引擎，效率比Maruku更高。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://liquidmarkup.org/&quot;&gt;Liquid&lt;/a&gt; Ruby的模板渲染引擎。它也是Jekyll所使用的模板引擎。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquid for Designers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Programmers&quot;&gt;Liquid for Programmers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;3. 基本结构&lt;/h1&gt;

&lt;p&gt;Jekyll从核心上来说是一个文本转换引擎。该系统内部的工作原理是：你输入一些用自己喜爱的标记语言格式书写的文本，可以是Markdown、Textile或纯粹的HTML，它将这些文本混合后放入一个或一整套页面布局当中。在整个过程中，你可以自行决定你的站点URL的模式、以及哪些数据将被显示在页面中，等等。这一切都将通过严格的文本编辑完成，而生成的Web界面则是最终的产品。&lt;/p&gt;

&lt;p&gt;一个典型的Jekyll站点通常具有如下结构：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;.
|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   `-- post.html
|-- _posts
|-- _site
`-- index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以下是每部分功能的简述：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_config.yml&lt;/code&gt;。保存Jekyll配置的文件。虽然绝大部分选项可以通过命令行参数指定，但将它们写入配置文件可以使你在每次执行时不必记住它们。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_includes&lt;/code&gt;。该目录存放可以与&lt;code&gt;_layouts&lt;/code&gt;和&lt;code&gt;_posts&lt;/code&gt;混合、匹配并重用的文件。Liquid标签&lt;code&gt;{ % include % }&lt;/code&gt;可以用于嵌入文件&lt;code&gt;_includes/file.ext&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_layouts&lt;/code&gt;。该目录存放用来插入帖子的网页布局模板。页面布局基于类似博客平台的一个帖子接一个帖子的原则，通过YAML前置数据定义。Liquid标签用于在页面上插入帖子的文本内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_posts&lt;/code&gt;。该目录下存放的可以说成是你的&amp;quot;动态内容&amp;quot;。这些文件的格式很重要，它们的命名模式必须遵循 &lt;code&gt;YEAR-MONTH-DATE-title.MARKUP&lt;/code&gt; 。每一个帖子的固定链接URL可以作弹性的调整，但帖子的发布日期和转换所使用的标记语言会根据且仅根据文件名中的相应部分来识别。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_site&lt;/code&gt;。这里是Jekyll用以存放最终生成站点的根路径位置。也许把它加到你的 &lt;code&gt;.gitignore&lt;/code&gt; 列表中会是个不错的主意。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;4. 运行Jekyll&lt;/h1&gt;

&lt;p&gt;通常直接在命令行下使用可执行的Ruby脚本 jekyll ，它可以从gem安装。如果要启动一个临时的Web服务器并测试你的Jekyll站点，执行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;jekyll --server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后在浏览器中访问 &lt;code&gt;http://localhost:4000&lt;/code&gt; 或 &lt;code&gt;http://0.0.0.0:4000&lt;/code&gt; 。当然这里还有其他许多参数选项可以使用。&lt;/p&gt;

&lt;h1&gt;5. 部署&lt;/h1&gt;

&lt;p&gt;由于Jekyll所做的仅仅是生成一个包含HTML等静态网站文件的目录（_site），它可以通过简单的拷贝（scp）、远程同步（rsync）、ftp上传或git等方式部署到任何Web服务器上，例如github、gitcafe、qiniu。&lt;/p&gt;

&lt;h1&gt;6. 其他静态网站生成器&lt;/h1&gt;

&lt;p&gt;如果想要尝试一些其他的静态网页生成器，这里是一个简略的列表：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tinytree.info/&quot;&gt;Bonsai&lt;/a&gt; 一个非常简单（但实用）的小脚本&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://webgen.rubyforge.org/&quot;&gt;Webgen&lt;/a&gt; 一个较复杂的生成器&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Python

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ringce.com/hyde&quot;&gt;Hyde&lt;/a&gt; Jekyll的Python语言实现版本&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pypi.python.org/pypi/cyrax&quot;&gt;Cyrax&lt;/a&gt; 使用Jinja2模板引擎的生成器&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;PHP

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.phrozn.info/&quot;&gt;Phrozn&lt;/a&gt; PHP语言实现的静态网站生成器&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;nodejs

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tommy351/hexo&quot;&gt;hexo&lt;/a&gt;一个台湾人实现的生成器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ericzhang-cn/papery&quot;&gt;papery&lt;/a&gt; 纯nodejs编写&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docpad.org/&quot;&gt;DocPad&lt;/a&gt;  static web sites generator using Node.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更详细的列表和介绍请参见：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.subspacefield.org/%7Etravis/static_blog_generators.html&quot;&gt;Static Blog Generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://iwantmyname.com/blog/2011/02/list-static-website-generators.html&quot;&gt;32 Static Website Generators For Your Site, Blog Or Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;7. 资源&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;jekyll官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jekyllbootstrap.com/%E2%80%8E&quot;&gt;Jekyll Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;8. 教程&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot;&gt;搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yangzhiping.com/tech/wordpress-to-jekyll.html&quot;&gt;告别wordpress，拥抱jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.soimort.org/posts/101/&quot;&gt;像黑客一样写博客——Jekyll入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/question/19996679&quot;&gt;用 Jekyll 和 Octopress 搭建博客，哪个更合适？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.skydark.info/programming/2012/03/23/play-with-jekyll/&quot;&gt;Play with Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;9. 使用jekyll搭建的博客&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.zhuoqun.net/&quot;&gt;创造者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.liulantao.com/&quot;&gt;非常规思维研究所&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yihui.name/cn/&quot;&gt;Keep on Fighting!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://havee.me/&quot;&gt;Havee&amp;#39;s Space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mytharcher.github.io/&quot;&gt;闭门造轮子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[ssh连接环境变量问题]]></title>
   <link href="http://blog.javachen.com/linux/2014/01/18/bash-problem-when-ssh-access"/>
   <updated>2014-01-18T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/linux/2014/01/18/bash-problem-when-ssh-access</id>
   <content type="html">&lt;h1&gt;1. 问题&lt;/h1&gt;

&lt;p&gt;RHEL服务器A有个启动脚本（普通用户user01运行），里面使用ifconfig获取ip地址如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Localhost_ip=$(ifconfig |awk -F &amp;#39;addr:|Bcast&amp;#39; &amp;#39;/Bcast/{print $2}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于普通用户user01不能直接识别ifconfig命令，只能使用全路径&lt;code&gt;/sbin/ifconfig&lt;/code&gt;，目前处理方式为修改&lt;code&gt;~/.bash_profile&lt;/code&gt;文件添加环境变量如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;PATH=$PATH:$HOME/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改成如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;PATH=$PATH:$HOME/bin:/sbin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;经过如上配置后服务器本机user01用户登录执行XX.sh脚本可以识别ifconfig命令。&lt;/p&gt;

&lt;p&gt;出现如下问题：&lt;/p&gt;

&lt;p&gt;远程主机B通过ssh远程执行启动脚本XX.sh，报错如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;bash: ifconfg: command not found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;2. 问题分析&lt;/h1&gt;

&lt;p&gt;测试前准备，追加调用说明语句，如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;/etc/profile
[root@node3 ~]# vim /etc/profile
echo &amp;quot;/etc/profile begin:&amp;quot;
echo &amp;quot;$PATH&amp;quot;
...

unset i
unset pathmunge

echo &amp;quot;invoke /etc/profile&amp;quot;
echo &amp;quot;$PATH&amp;quot;
echo &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node3 ~]# vim /etc/bashrc
...
# vim:ts=4:sw=4

echo &amp;quot;invoke /etc/bashrc&amp;quot;
echo &amp;quot;$PATH&amp;quot;
echo &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node3 ~]# vim /root/.bash_profile
# User specific environment and startup programs
PATH=$PATH:$HOME/bin
export PATH

echo &amp;quot;invoke ~/.bash_profile&amp;quot;
echo &amp;quot;$PATH&amp;quot;
echo &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node3 ~]# vim /root/.bashrc
...
# Source global definitions
if [ -f /etc/bashrc ]; then
        . /etc/bashrc
fi

echo &amp;quot;invoke ~/.bashrc&amp;quot;
echo &amp;quot;$PATH&amp;quot;
echo &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node3 ~]# vim /home/user01/.bash_profile
...
# User specific environment and startup programs
PATH=$PATH:$HOME/bin
export PATH

echo &amp;quot;invoke ~/.bashrc&amp;quot;
echo &amp;quot;$PATH&amp;quot;
echo &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node3 ~]# vim /home/user01/.bashrc
...
# User specific aliases and functions

echo &amp;quot;invoke ~/.bashrc&amp;quot;
echo &amp;quot;$PATH&amp;quot;
echo &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分 user 和 root 用户，3 种场景进行测试，如下：&lt;/p&gt;

&lt;h2&gt;普通用户 User&lt;/h2&gt;

&lt;h3&gt;场景1：&lt;/h3&gt;

&lt;p&gt;本机使用 su 命令切换到普通用户 （属于 Login 方式）&lt;/p&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login 之前，系统 PATH 为：&lt;code&gt;/usr/local/bin:/bin:/usr/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Login 方式，文件调用顺序为： &lt;code&gt;/etc/profile -&amp;gt; /etc/bashrc -&amp;gt; ~/.bashrc -&amp;gt; ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Login 之后，系统 PATH 为：&lt;code&gt;/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/user01/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;su - user
[root@node3 ~]# hostname -i
192.168.122.33
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node3 ~]# su - user01
/etc/profile begin:
/usr/local/bin:/bin:/usr/bin
invoke /etc/profile
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin

invoke /etc/bashrc
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin

invoke ~/.bashrc
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin

invoke ~/.bash_profile
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/user01/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;场景2：&lt;/h3&gt;

&lt;p&gt;远程机使用 ssh 命令以普通用户身份登陆到主机 （属于 Login 方式）&lt;/p&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;与在本机使用 su 命令切换到普通用户的效果完全一样！&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh user@remote_server_ip
[root@node1 ~]# hostname -i
192.168.122.31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node1 ~]# ssh user01@192.168.122.33
user01@192.168.122.33&amp;#39;s password: 
Last login: Tue Jul  9 16:23:33 2013 from 192.168.122.31
/etc/profile begin:
/usr/local/bin:/bin:/usr/bin
invoke /etc/profile
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin

invoke /etc/bashrc
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin

invoke ~/.bashrc
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin

invoke ~/.bash_profile
/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/user01/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;场景3：&lt;/h2&gt;

&lt;p&gt;远程机使用 ssh 命令以普通用户身份连接到主机执行获取 PATH 的命令 （属于 NoLogin 方式）&lt;/p&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NoLogin 方式，命令获取的 PATH 为该远程机的，并未拿到目标主机的 PATH&lt;/li&gt;
&lt;li&gt;NoLogin 方式，文件调用顺序为：&lt;code&gt;/etc/bashrc -&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;NoLogin 方式，目标主机 User 用户 PATH 为：&lt;code&gt;/usr/local/bin:/bin:/usr/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh user@remote_server_ip command
[root@node1 ~]# hostname -i
192.168.122.31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node1 ~]# echo $PATH
/usr/local/rabbitmq/sbin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin

[root@node1 ~]# ssh user01@192.168.122.33 &amp;quot;echo $PATH&amp;quot;
user01@192.168.122.33&amp;#39;s password: 

invoke /etc/bashrc
/usr/local/bin:/bin:/usr/bin

invoke ~/.bashrc
/usr/local/bin:/bin:/usr/bin

/usr/local/rabbitmq/sbin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;对比 root 用户&lt;/h2&gt;

&lt;h3&gt;场景1：&lt;/h3&gt;

&lt;p&gt;本机使用 su 命令切换到 root （属于 Login 方式）&lt;/p&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login 之前，系统 PATH 为：&lt;code&gt;/usr/local/bin:/bin:/usr/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Login 方式，root 用户，文件调用顺序为：&lt;code&gt;/etc/profile -&amp;gt; /etc/bashrc -&amp;gt; ~/.bashrc -&amp;gt; ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Login 之后，系统 PATH 为：&lt;code&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;su - root
[root@node3 ~]# hostname -i
192.168.122.33
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node3 ~]# su - root
/etc/profile begin:
/usr/local/bin:/bin:/usr/bin
invoke /etc/profile
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

invoke /etc/bashrc
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

invoke ~/.bashrc
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

invoke ~/.bash_profile
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;场景2：&lt;/h3&gt;

&lt;p&gt;远程机使用 ssh 命令以 root 用户身份登陆到主机 （属于 Login 方式）&lt;/p&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;与在本机使用 su 命令切换到 root 用户的效果完全一样！&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh root@remote_server_ip
[root@node1 ~]# hostname -i
192.168.122.31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node1 ~]# ssh root@192.168.122.33
root@192.168.122.33&amp;#39;s password: 
Last login: Tue Jul  9 15:54:53 2013 from 192.168.122.1
/etc/profile begin:
/usr/local/bin:/bin:/usr/bin
invoke /etc/profile
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

invoke /etc/bashrc
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

invoke ~/.bashrc
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

invoke ~/.bash_profile
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;场景3&lt;/h3&gt;

&lt;p&gt;远程机使用 ssh 命令以 root 用户身份连接到主机执行获取 PATH 的命令 （属于 NoLogin 方式）&lt;/p&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NoLogin 方式，命令获取的 PATH 为该远程机的，并未拿到目标主机的 PATH&lt;/li&gt;
&lt;li&gt;NoLogin 方式，文件调用顺序为：&lt;code&gt;/etc/bashrc -&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;NoLogin 方式，目标主机 root 用户 PATH 为：&lt;code&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh root@remote_server_ip command
[root@node1 ~]# hostname -i
192.168.122.31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;[root@node1 ~]# echo $PATH
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin

[root@node1 ~]# ssh root@192.168.122.33 &amp;quot;echo $PATH&amp;quot;
root@192.168.122.33&amp;#39;s password: 
invoke /etc/bashrc
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

invoke ~/.bashrc
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;关于/etc/profile 文件部分代码分析&lt;/h3&gt;

&lt;p&gt;结论：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;无论 root 还是 user ，只有调用此文件，其 PATH 中才会被追加 sbin 相关路径。而由以上测试场景可知，只有 Login 时，&lt;code&gt;/etc/profile&lt;/code&gt; 文件才会被调用。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;pathmunge () {
    case &amp;quot;:${PATH}:&amp;quot; in
        *:&amp;quot;$1&amp;quot;:*)
            ;;
        *)
            if [ &amp;quot;$2&amp;quot; = &amp;quot;after&amp;quot; ] ; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}

if [ -x /usr/bin/id ]; then
    if [ -z &amp;quot;$EUID&amp;quot; ]; then
        # ksh workaround
        EUID=`id -u`
        UID=`id -ru`
    fi
    USER=&amp;quot;`id -un`&amp;quot;
    LOGNAME=$USER
    MAIL=&amp;quot;/var/spool/mail/$USER&amp;quot;
fi


# Path manipulation
if [ &amp;quot;$EUID&amp;quot; = &amp;quot;0&amp;quot; ]; then
    pathmunge /sbin
    pathmunge /usr/sbin
    pathmunge /usr/local/sbin
else
    pathmunge /usr/local/sbin after
    pathmunge /usr/sbin after
    pathmunge /sbin after

fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;3. 总结&lt;/h1&gt;

&lt;p&gt;综上，如需修改 PATH，建议修改 bashrc 文件，从而保证任何方式访问时 PATH 的正确性。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[HBase Region Split策略]]></title>
   <link href="http://blog.javachen.com/hbase/2014/01/16/hbase-region-split-policy"/>
   <updated>2014-01-16T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/hbase/2014/01/16/hbase-region-split-policy</id>
   <content type="html">&lt;h1&gt;Region 概念&lt;/h1&gt;

&lt;p&gt;Region是表获取和分布的基本元素，由每个列族的一个Store组成。对象层级图如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Table       (HBase table)
    Region       (Regions for the table)
         Store          (Store per ColumnFamily for each Region for the table)
              MemStore        (MemStore for each Store for each Region for the table)
              StoreFile       (StoreFiles for each Store for each Region for the table)
                    Block     (Blocks within a StoreFile within a Store for each Region for the table)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Region 大小&lt;/h1&gt;

&lt;p&gt;Region的大小是一个棘手的问题，需要考量如下几个因素。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Regions是可用性和分布式的最基本单位&lt;/li&gt;
&lt;li&gt;HBase通过将region切分在许多机器上实现分布式。也就是说，你如果有16GB的数据，只分了2个region， 你却有20台机器，有18台就浪费了。&lt;/li&gt;
&lt;li&gt;region数目太多就会造成性能下降，现在比以前好多了。但是对于同样大小的数据，700个region比3000个要好。&lt;/li&gt;
&lt;li&gt;region数目太少就会妨碍可扩展性，降低并行能力。有的时候导致压力不够分散。这就是为什么，你向一个10节点的HBase集群导入200MB的数据，大部分的节点是idle的。&lt;/li&gt;
&lt;li&gt;RegionServer中1个region和10个region索引需要的内存量没有太多的差别。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;p&gt;最好是使用默认的配置，可以把热的表配小一点(或者受到split热点的region把压力分散到集群中)。如果你的cell的大小比较大(100KB或更大)，就可以把region的大小调到1GB。region的最大大小在hbase配置文件中定义：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.hregion.max.filesize&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;10 * 1024 * 1024 * 1024&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;说明：&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;当region的大小超过了上面配置的值的时候，该region就会被拆分，具体的拆分策略见下文。&lt;/li&gt;
&lt;li&gt;上面的值也可以针对每个表单独设置，例如在hbase shell中设置：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;create &amp;#39;t&amp;#39;,&amp;#39;f&amp;#39;
disable &amp;#39;t&amp;#39;
alter &amp;#39;t&amp;#39;, METHOD =&amp;gt; &amp;#39;table_att&amp;#39;, MAX_FILESIZE =&amp;gt; &amp;#39;134217728&amp;#39;
enable &amp;#39;t&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Region 拆分策略&lt;/h1&gt;

&lt;p&gt;Region的分割操作是不可见的，因为Master不会参与其中。RegionServer拆分region的步骤是，先将该region下线，然后拆分，将其子region加入到META元信息中，再将他们加入到原本的RegionServer中，最后汇报Master。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;执行split的是CompactSplitThread线程类。&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;自定义拆分策略&lt;/h2&gt;

&lt;p&gt;可以通过设置&lt;code&gt;RegionSplitPolicy&lt;/code&gt;的实现类来指定拆分策略，RegionSplitPolicy类的实现类有：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ConstantSizeRegionSplitPolicy
    IncreasingToUpperBoundRegionSplitPolicy
        DelimitedKeyPrefixRegionSplitPolicy
        KeyPrefixRegionSplitPolicy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于split，并不是设置了&lt;code&gt;hbase.hregion.max.filesize&lt;/code&gt;（默认10G）为很大就保证不split了，需要有以下的算法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IncreasingToUpperBoundRegionSplitPolicy是0.94.0默认region split策略。这里的split有一个判断条件，先计算这tableRegionsCount（regionserver上的这个table的online的region个数），然后循环计算此region的所有store是否太大，这是通过getSizeToCheck方法计算出一个size,若当前的store总大小大于这个值，则表示此region需要split。getSizeToCheck的计算方法首先判断tableRegionsCount是否等于0，若是则返回&lt;code&gt;hbase.hregion.max.filesize&lt;/code&gt;，若不是，则计算&lt;code&gt;Math.min(getDesiredMaxFileSize(),this.flushSize * (tableRegionsCount * tableRegionsCount)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ConstantSizeRegionSplitPolicy，仅仅当region大小超过常量值（&lt;code&gt;hbase.hregion.max.filesize&lt;/code&gt;大小）时，才进行拆分。&lt;/li&gt;
&lt;li&gt;DelimitedKeyPrefixRegionSplitPolicy，保证以分隔符前面的前缀为splitPoint，保证相同RowKey前缀的数据在一个Region中&lt;/li&gt;
&lt;li&gt;KeyPrefixRegionSplitPolicy，保证具有相同前缀的row在一个region中（要求设计中前缀具有同样长度）。指定rowkey前缀位数划分region，通过读取&lt;code&gt;table的prefix_split_key_policy.prefix_length&lt;/code&gt;属性，该属性为数字类型，表示前缀长度，在进行split时，按此长度对splitPoint进行截取。此种策略比较适合固定前缀的rowkey。当table中没有设置该属性，或其属性不为Integer类型时，指定此策略效果等同与使用IncreasingToUpperBoundRegionSplitPolicy。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;举个例子：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;假设使用hbase.hregion.memstore.flush.size 128M, hregion.max.filesize为10G， 那么每次region增长情况为：512M,1152M,2G,3,2G,4,6G,6,2G,etc。当region增长到9个时，9&lt;em&gt;9&lt;/em&gt;128M/1024=10.125G &amp;gt;10G,至此以后region split大小都固定为10G。&lt;/p&gt;

&lt;h2&gt;配置拆分策略&lt;/h2&gt;

&lt;p&gt;你可以在hbase配置文件中定义全局的拆分策略，设置&lt;code&gt;hbase.regionserver.region.split.policy&lt;/code&gt;的值即可，也可以在创建和修改表时候指定：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;// 更新现有表的split策略
HBaseAdmin admin = new HBaseAdmin( conf);
HTable hTable = new HTable( conf, &amp;quot;test&amp;quot; );
HTableDescriptor htd = hTable.getTableDescriptor();
HTableDescriptor newHtd = new HTableDescriptor(htd);
newHtd.setValue(HTableDescriptor. SPLIT_POLICY, KeyPrefixRegionSplitPolicy.class .getName());// 指定策略
newHtd.setValue(&amp;quot;prefix_split_key_policy.prefix_length&amp;quot;, &amp;quot;2&amp;quot;);
newHtd.setValue(&amp;quot;MEMSTORE_FLUSHSIZE&amp;quot;, &amp;quot;5242880&amp;quot;); // 5M
admin.disableTable( &amp;quot;test&amp;quot;);
admin.modifyTable(Bytes. toBytes(&amp;quot;test&amp;quot;), newHtd);
admin.enableTable( &amp;quot;test&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;说明：&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;上面的不同策略可以在不同的业务场景下使用，特别是第三种和第四种一般关注和使用的比较少。&lt;/li&gt;
&lt;li&gt;如果想关闭自动拆分改为手动拆分，建议同时修改&lt;code&gt;hbase.hregion.max.filesize&lt;/code&gt;和&lt;code&gt;hbase.regionserver.region.split.policy&lt;/code&gt;值。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;参考文章&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&quot;http://blog.csdn.net/doliu6/article/details/13505319&quot;&gt;HBase的Compact和Split源码分析与应用--基于0.94.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&quot;http://blog.csdn.net/yangbutao/article/details/8930126&quot;&gt;HBase源码分析之org.apache.hadoop.hbase.regionserver包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a href=&quot;http://abloz.com/hbase/book.html&quot;&gt;HBase 官方文档中文版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[4] &lt;a href=&quot;http://blog.toby941.sinaapp.com/hbase-region-split.html&quot;&gt;hbase region split策略&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title><![CDATA[vim配置和插件管理]]></title>
   <link href="http://blog.javachen.com/linux/2014/01/14/vim-config-and-plugins"/>
   <updated>2014-01-14T00:00:00+08:00</updated>
   <id>http://blog.javachen.com/linux/2014/01/14/vim-config-and-plugins</id>
   <content type="html">&lt;p&gt;这篇文章主要是记录vim配置中各个配置项的含义并且收藏一些常用的插件及其使用方法。&lt;/p&gt;

&lt;h1&gt;1. vim配置&lt;/h1&gt;

&lt;p&gt;目前我的vimrc配置放置在:&lt;a href=&quot;https://github.com/javachen/snippets/blob/master/dotfiles/.vimrc&quot;&gt;https://github.com/javachen/snippets/blob/master/dotfiles/.vimrc&lt;/a&gt;，其中大多数用英文注释。&lt;/p&gt;

&lt;h1&gt;2. 插件管理&lt;/h1&gt;

&lt;h2&gt;pathogen&lt;/h2&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/tpope/vim-pathogen&quot;&gt;https://github.com/tpope/vim-pathogen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;首选需要安装神器 pathogen 来管理所有的插件，具体安装可以看官网的介绍。&lt;/p&gt;

&lt;p&gt;要记得把以下内容加入到vimrc文件中:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;execute pathogen#infect()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h2&gt;NERDTree&lt;/h2&gt;

&lt;p&gt;NERD tree允许你在Vim编辑器中以树状方式浏览系统中的文件和目录, 支持快捷键与鼠标操作, 使用起来十分方便. NERD tree能够以不同颜色高亮显示节点类型, 并包含书签, 过滤等实用功能. 配合taglist或txtviewer插件, 右边窗口显示本文件夹的文件, 左边窗口显示本文的文档结构, 将会使管理一个工程变得相当容易.&lt;/p&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/scrooloose/nerdtree&quot;&gt;https://github.com/scrooloose/nerdtree&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为我是从Ulipad转到Vim的，刚开始的时候没了目录树。总感觉非常的不习惯，于是找到了这个目录树插件。&lt;/p&gt;

&lt;p&gt;安装方法很简单，只要把项目clone一份到bundle目录就可以了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;cd ~/.vim/bundle
git clone https://github.com/scrooloose/nerdtree.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后的插件也都是这么安装。&lt;/p&gt;

&lt;h3&gt;使用&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;在linux命令行界面，输入vim&lt;/li&gt;
&lt;li&gt;输入  :NERDTree ，回车&lt;/li&gt;
&lt;li&gt;入当前目录的树形界面，通过小键盘上下键，能移动选中的目录或文件&lt;/li&gt;
&lt;li&gt;目录前面有+号，摁Enter会展开目录，文件前面是-号，摁Enter会在右侧窗口展现该文件的内容，并光标的焦点focus右侧。&lt;/li&gt;
&lt;li&gt;ctr+w+h  光标focus左侧树形目录，ctrl+w+l 光标focus右侧文件显示窗口。多次摁 ctrl+w，光标自动在左右侧窗口切换&lt;/li&gt;
&lt;li&gt;光标focus左侧树形窗口，按 ? 弹出NERDTree的帮助，再次按？关闭帮助显示&lt;/li&gt;
&lt;li&gt;输入:q回车，关闭光标所在窗口&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;除了使用鼠标可以基本操作以外，还可以使用键盘。下面列出常用快捷键&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;o 打开关闭文件或者目录
t 在标签页中打开
T 在后台标签页中打开
! 执行此文件
p 到上层目录
P 到根目录
K 到第一个节点
J 到最后一个节点
u 打开上层目录
m 显示文件系统菜单（添加、删除、移动操作）
? 帮助
q 关闭
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;NERDTree-Tabs&lt;/h2&gt;

&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/jistr/vim-nerdtree-tabs&quot;&gt;https://github.com/jistr/vim-nerdtree-tabs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装完NERDTree以后我觉得还需要安装一下NERDTree-Tabs这个插件，提供了很多NERDTree的加强功能，包括保持 目录树状态、优化tab标题等等。&lt;/p&gt;

&lt;p&gt;可以把一下内容添加到vimrc文件中&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;let g:nerdtree_tabs_open_on_console_startup=1       &amp;quot;设置打开vim的时候默认打开目录树
map &amp;lt;leader&amp;gt;n &amp;lt;plug&amp;gt;NERDTreeTabsToggle &amp;lt;CR&amp;gt;         &amp;quot;设置打开目录树的快捷键
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;supertab&lt;/h2&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/ervandew/supertab&quot;&gt;https://github.com/ervandew/supertab&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;增强tab键的功能，建议安装。&lt;/p&gt;

&lt;h2&gt;ctrlp&lt;/h2&gt;

&lt;p&gt;项目地址:   &lt;a href=&quot;https://github.com/kien/ctrlp.vim&quot;&gt;https://github.com/kien/ctrlp.vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;快捷键：&lt;code&gt;ctrl+p&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;3. 安装oh-my-zsh&lt;/h1&gt;

&lt;h1&gt;4. 参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wklken/k-vim&quot;&gt;https://github.com/wklken/k-vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/question/19989337&quot;&gt;http://www.zhihu.com/question/19989337&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/ma6174/archive/2011/12/10/2283393.html&quot;&gt;http://www.cnblogs.com/ma6174/archive/2011/12/10/2283393.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 
</feed>
